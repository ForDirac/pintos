mkdir -p build/devices
mkdir -p build/filesys
mkdir -p build/lib
mkdir -p build/lib/kernel
mkdir -p build/lib/user
mkdir -p build/tests/filesys/base
mkdir -p build/tests/userprog
mkdir -p build/tests/userprog/no-vm
mkdir -p build/threads
mkdir -p build/userprog
cp ../Makefile.build build/Makefile
cd build && make grade
make[1]: Entering directory '/home/team46a/pintos/src/userprog/build'
gcc-4.1 -m32 -E -nostdinc -I../.. -I../../lib -I../../lib/kernel -P ../../threads/kernel.lds.S > threads/kernel.lds.s
gcc-4.1 -m32 -c ../../threads/start.S -o threads/start.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -MMD -MF threads/start.d
gcc-4.1 -m32 -c ../../threads/init.c -o threads/init.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/init.d
gcc-4.1 -m32 -c ../../threads/thread.c -o threads/thread.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/thread.d
gcc-4.1 -m32 -c ../../threads/switch.S -o threads/switch.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -MMD -MF threads/switch.d
gcc-4.1 -m32 -c ../../threads/interrupt.c -o threads/interrupt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/interrupt.d
gcc-4.1 -m32 -c ../../threads/intr-stubs.S -o threads/intr-stubs.o -Wa,--gstabs -nostdinc -I../.. -I../../lib -I../../lib/kernel -DUSERPROG -DFILESYS -MMD -MF threads/intr-stubs.d
gcc-4.1 -m32 -c ../../threads/synch.c -o threads/synch.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/synch.d
gcc-4.1 -m32 -c ../../threads/palloc.c -o threads/palloc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/palloc.d
gcc-4.1 -m32 -c ../../threads/malloc.c -o threads/malloc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF threads/malloc.d
gcc-4.1 -m32 -c ../../devices/pit.c -o devices/pit.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/pit.d
gcc-4.1 -m32 -c ../../devices/timer.c -o devices/timer.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/timer.d
gcc-4.1 -m32 -c ../../devices/kbd.c -o devices/kbd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/kbd.d
gcc-4.1 -m32 -c ../../devices/vga.c -o devices/vga.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/vga.d
gcc-4.1 -m32 -c ../../devices/serial.c -o devices/serial.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/serial.d
gcc-4.1 -m32 -c ../../devices/block.c -o devices/block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/block.d
gcc-4.1 -m32 -c ../../devices/partition.c -o devices/partition.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/partition.d
gcc-4.1 -m32 -c ../../devices/ide.c -o devices/ide.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/ide.d
gcc-4.1 -m32 -c ../../devices/input.c -o devices/input.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/input.d
gcc-4.1 -m32 -c ../../devices/intq.c -o devices/intq.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/intq.d
gcc-4.1 -m32 -c ../../devices/rtc.c -o devices/rtc.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/rtc.d
gcc-4.1 -m32 -c ../../devices/shutdown.c -o devices/shutdown.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/shutdown.d
gcc-4.1 -m32 -c ../../devices/speaker.c -o devices/speaker.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF devices/speaker.d
gcc-4.1 -m32 -c ../../lib/debug.c -o lib/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/debug.d
gcc-4.1 -m32 -c ../../lib/random.c -o lib/random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/random.d
gcc-4.1 -m32 -c ../../lib/stdio.c -o lib/stdio.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/stdio.d
gcc-4.1 -m32 -c ../../lib/stdlib.c -o lib/stdlib.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/stdlib.d
gcc-4.1 -m32 -c ../../lib/string.c -o lib/string.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/string.d
gcc-4.1 -m32 -c ../../lib/arithmetic.c -o lib/arithmetic.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/arithmetic.d
gcc-4.1 -m32 -c ../../lib/ustar.c -o lib/ustar.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/ustar.d
gcc-4.1 -m32 -c ../../lib/kernel/debug.c -o lib/kernel/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/debug.d
gcc-4.1 -m32 -c ../../lib/kernel/list.c -o lib/kernel/list.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/list.d
gcc-4.1 -m32 -c ../../lib/kernel/bitmap.c -o lib/kernel/bitmap.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/bitmap.d
gcc-4.1 -m32 -c ../../lib/kernel/hash.c -o lib/kernel/hash.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/hash.d
gcc-4.1 -m32 -c ../../lib/kernel/console.c -o lib/kernel/console.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF lib/kernel/console.d
gcc-4.1 -m32 -c ../../userprog/process.c -o userprog/process.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/process.d
gcc-4.1 -m32 -c ../../userprog/pagedir.c -o userprog/pagedir.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/pagedir.d
gcc-4.1 -m32 -c ../../userprog/exception.c -o userprog/exception.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/exception.d
gcc-4.1 -m32 -c ../../userprog/syscall.c -o userprog/syscall.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/syscall.d
gcc-4.1 -m32 -c ../../userprog/gdt.c -o userprog/gdt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/gdt.d
gcc-4.1 -m32 -c ../../userprog/tss.c -o userprog/tss.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF userprog/tss.d
gcc-4.1 -m32 -c ../../filesys/filesys.c -o filesys/filesys.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/filesys.d
gcc-4.1 -m32 -c ../../filesys/free-map.c -o filesys/free-map.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/free-map.d
gcc-4.1 -m32 -c ../../filesys/file.c -o filesys/file.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/file.d
gcc-4.1 -m32 -c ../../filesys/directory.c -o filesys/directory.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/directory.d
gcc-4.1 -m32 -c ../../filesys/inode.c -o filesys/inode.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/inode.d
gcc-4.1 -m32 -c ../../filesys/fsutil.c -o filesys/fsutil.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/kernel -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers -DUSERPROG -DFILESYS -MMD -MF filesys/fsutil.d
ld -melf_i386 -T threads/kernel.lds.s -o kernel.o threads/start.o threads/init.o threads/thread.o threads/switch.o threads/interrupt.o threads/intr-stubs.o threads/synch.o threads/palloc.o threads/malloc.o devices/pit.o devices/timer.o devices/kbd.o devices/vga.o devices/serial.o devices/block.o devices/partition.o devices/ide.o devices/input.o devices/intq.o devices/rtc.o devices/shutdown.o devices/speaker.o lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/kernel/debug.o lib/kernel/list.o lib/kernel/bitmap.o lib/kernel/hash.o lib/kernel/console.o userprog/process.o userprog/pagedir.o userprog/exception.o userprog/syscall.o userprog/gdt.o userprog/tss.o filesys/filesys.o filesys/free-map.o filesys/file.o filesys/directory.o filesys/inode.o filesys/fsutil.o
objcopy -R .note -R .comment -S kernel.o kernel.bin
gcc-4.1 -m32 -c ../../threads/loader.S -o threads/loader.o -Wa,--gstabs -nostdinc -I../.. -I../../lib 
ld -melf_i386 -N -e 0 -Ttext 0x7c00 --oformat binary -o loader.bin threads/loader.o
gcc-4.1 -m32 -c ../../tests/userprog/args.c -o tests/userprog/args.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/args.d
gcc-4.1 -m32 -c ../../tests/lib.c -o tests/lib.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/lib.d
gcc-4.1 -m32 -c ../../lib/user/entry.c -o lib/user/entry.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/entry.d
gcc-4.1 -m32 -c ../../lib/user/debug.c -o lib/user/debug.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/debug.d
gcc-4.1 -m32 -c ../../lib/user/syscall.c -o lib/user/syscall.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/syscall.d
gcc-4.1 -m32 -c ../../lib/user/console.c -o lib/user/console.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF lib/user/console.d
rm -f libc.a
ar r libc.a lib/debug.o lib/random.o lib/stdio.o lib/stdlib.o lib/string.o lib/arithmetic.o lib/ustar.o lib/user/debug.o lib/user/syscall.o lib/user/console.o
ranlib libc.a
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-none
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-none -a args-none -- -q  -f run args-none < /dev/null 2> tests/userprog/args-none.errors > tests/userprog/args-none.output
perl -I../.. ../../tests/userprog/args-none.ck tests/userprog/args-none tests/userprog/args-none.result
pass tests/userprog/args-none
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-single
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-single -a args-single -- -q  -f run 'args-single onearg' < /dev/null 2> tests/userprog/args-single.errors > tests/userprog/args-single.output
perl -I../.. ../../tests/userprog/args-single.ck tests/userprog/args-single tests/userprog/args-single.result
pass tests/userprog/args-single
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-multiple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-multiple -a args-multiple -- -q  -f run 'args-multiple some arguments for you!' < /dev/null 2> tests/userprog/args-multiple.errors > tests/userprog/args-multiple.output
perl -I../.. ../../tests/userprog/args-multiple.ck tests/userprog/args-multiple tests/userprog/args-multiple.result
pass tests/userprog/args-multiple
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-many
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-many -a args-many -- -q  -f run 'args-many a b c d e f g h i j k l m n o p q r s t u v' < /dev/null 2> tests/userprog/args-many.errors > tests/userprog/args-many.output
perl -I../.. ../../tests/userprog/args-many.ck tests/userprog/args-many tests/userprog/args-many.result
pass tests/userprog/args-many
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/args-dbl-space
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/args-dbl-space -a args-dbl-space -- -q  -f run 'args-dbl-space two  spaces!' < /dev/null 2> tests/userprog/args-dbl-space.errors > tests/userprog/args-dbl-space.output
perl -I../.. ../../tests/userprog/args-dbl-space.ck tests/userprog/args-dbl-space tests/userprog/args-dbl-space.result
pass tests/userprog/args-dbl-space
gcc-4.1 -m32 -c ../../tests/userprog/sc-bad-sp.c -o tests/userprog/sc-bad-sp.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-bad-sp.d
gcc-4.1 -m32 -c ../../tests/main.c -o tests/main.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/main.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-bad-sp.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-bad-sp
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-bad-sp -a sc-bad-sp -- -q  -f run sc-bad-sp < /dev/null 2> tests/userprog/sc-bad-sp.errors > tests/userprog/sc-bad-sp.output
perl -I../.. ../../tests/userprog/sc-bad-sp.ck tests/userprog/sc-bad-sp tests/userprog/sc-bad-sp.result
FAIL tests/userprog/sc-bad-sp
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bf2c 0xc0021aed 0xc0021c1f 0x80480ad 0x80480f1 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002bf2c: syscall_handler (.../../userprog/syscall.c:50)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/sc-bad-sp:
0x080480ad: test_main (...s/userprog/sc-bad-sp.c:19)
0x080480f1: main (...ild/../../tests/main.c:13)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/sc-bad-arg.c -o tests/userprog/sc-bad-arg.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-bad-arg.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-bad-arg.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-bad-arg
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-bad-arg -a sc-bad-arg -- -q  -f run sc-bad-arg < /dev/null 2> tests/userprog/sc-bad-arg.errors > tests/userprog/sc-bad-arg.output
perl -I../.. ../../tests/userprog/sc-bad-arg.ck tests/userprog/sc-bad-arg tests/userprog/sc-bad-arg.result
FAIL tests/userprog/sc-bad-arg
Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-arg) begin
  sc-bad-arg: exit(-1)
Differences in `diff -u' format:
  (sc-bad-arg) begin
- sc-bad-arg: exit(-1)
+ sc-bad-arg: exit(-268370093)
gcc-4.1 -m32 -c ../../tests/userprog/sc-boundary.c -o tests/userprog/sc-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-boundary.d
gcc-4.1 -m32 -c ../../tests/userprog/boundary.c -o tests/userprog/boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/boundary.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-boundary -a sc-boundary -- -q  -f run sc-boundary < /dev/null 2> tests/userprog/sc-boundary.errors > tests/userprog/sc-boundary.output
perl -I../.. ../../tests/userprog/sc-boundary.ck tests/userprog/sc-boundary tests/userprog/sc-boundary.result
pass tests/userprog/sc-boundary
gcc-4.1 -m32 -c ../../tests/userprog/sc-boundary-2.c -o tests/userprog/sc-boundary-2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/sc-boundary-2.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/sc-boundary-2.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/sc-boundary-2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/sc-boundary-2 -a sc-boundary-2 -- -q  -f run sc-boundary-2 < /dev/null 2> tests/userprog/sc-boundary-2.errors > tests/userprog/sc-boundary-2.output
perl -I../.. ../../tests/userprog/sc-boundary-2.ck tests/userprog/sc-boundary-2 tests/userprog/sc-boundary-2.result
pass tests/userprog/sc-boundary-2
gcc-4.1 -m32 -c ../../tests/userprog/halt.c -o tests/userprog/halt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/halt.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/halt.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/halt
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/halt -a halt -- -q  -f run halt < /dev/null 2> tests/userprog/halt.errors > tests/userprog/halt.output
perl -I../.. ../../tests/userprog/halt.ck tests/userprog/halt tests/userprog/halt.result
pass tests/userprog/halt
gcc-4.1 -m32 -c ../../tests/userprog/exit.c -o tests/userprog/exit.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exit.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exit.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exit
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exit -a exit -- -q  -f run exit < /dev/null 2> tests/userprog/exit.errors > tests/userprog/exit.output
perl -I../.. ../../tests/userprog/exit.ck tests/userprog/exit tests/userprog/exit.result
pass tests/userprog/exit
gcc-4.1 -m32 -c ../../tests/userprog/create-normal.c -o tests/userprog/create-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-normal.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-normal -a create-normal -- -q  -f run create-normal < /dev/null 2> tests/userprog/create-normal.errors > tests/userprog/create-normal.output
perl -I../.. ../../tests/userprog/create-normal.ck tests/userprog/create-normal tests/userprog/create-normal.result
pass tests/userprog/create-normal
gcc-4.1 -m32 -c ../../tests/userprog/create-empty.c -o tests/userprog/create-empty.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-empty.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-empty.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-empty
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-empty -a create-empty -- -q  -f run create-empty < /dev/null 2> tests/userprog/create-empty.errors > tests/userprog/create-empty.output
perl -I../.. ../../tests/userprog/create-empty.ck tests/userprog/create-empty tests/userprog/create-empty.result
pass tests/userprog/create-empty
gcc-4.1 -m32 -c ../../tests/userprog/create-null.c -o tests/userprog/create-null.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-null.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-null.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-null
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-null -a create-null -- -q  -f run create-null < /dev/null 2> tests/userprog/create-null.errors > tests/userprog/create-null.output
perl -I../.. ../../tests/userprog/create-null.ck tests/userprog/create-null tests/userprog/create-null.result
FAIL tests/userprog/create-null
Kernel panic in run: PANIC at ../../filesys/directory.c:149 in dir_add(): assertion `name != NULL' failed.
Call stack: 0xc0028950 0xc002d09d 0xc002c61e 0xc002c053 0xc0021aed 0xc0021c1f 0x804a108 0x80480ba 0x8048107 0x804872e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002d09d: dir_add (..../filesys/directory.c:152)
0xc002c61e: filesys_create (..../../filesys/filesys.c:53)
0xc002c053: syscall_handler (...../userprog/syscall.c:132)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-null:
0x0804a108: create (.../../lib/user/syscall.c:93)
0x080480ba: test_main (...userprog/create-null.c:10)
0x08048107: main (...ild/../../tests/main.c:13)
0x0804872e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/create-bad-ptr.c -o tests/userprog/create-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-bad-ptr.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-bad-ptr -a create-bad-ptr -- -q  -f run create-bad-ptr < /dev/null 2> tests/userprog/create-bad-ptr.errors > tests/userprog/create-bad-ptr.output
perl -I../.. ../../tests/userprog/create-bad-ptr.ck tests/userprog/create-bad-ptr tests/userprog/create-bad-ptr.result
FAIL tests/userprog/create-bad-ptr
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002d09d 0xc002c61e 0xc002c053 0xc0021aed 0xc0021c1f 0x804a108 0x80480ba 0x8048107 0x804872e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002d09d: dir_add (..../filesys/directory.c:152)
0xc002c61e: filesys_create (..../../filesys/filesys.c:53)
0xc002c053: syscall_handler (...../userprog/syscall.c:132)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-bad-ptr:
0x0804a108: create (.../../lib/user/syscall.c:93)
0x080480ba: test_main (...rprog/create-bad-ptr.c:11)
0x08048107: main (...ild/../../tests/main.c:13)
0x0804872e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/create-long.c -o tests/userprog/create-long.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-long.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-long.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-long
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-long -a create-long -- -q  -f run create-long < /dev/null 2> tests/userprog/create-long.errors > tests/userprog/create-long.output
perl -I../.. ../../tests/userprog/create-long.ck tests/userprog/create-long tests/userprog/create-long.result
pass tests/userprog/create-long
gcc-4.1 -m32 -c ../../tests/userprog/create-exists.c -o tests/userprog/create-exists.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-exists.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-exists.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-exists
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-exists -a create-exists -- -q  -f run create-exists < /dev/null 2> tests/userprog/create-exists.errors > tests/userprog/create-exists.output
perl -I../.. ../../tests/userprog/create-exists.ck tests/userprog/create-exists tests/userprog/create-exists.result
pass tests/userprog/create-exists
gcc-4.1 -m32 -c ../../tests/userprog/create-bound.c -o tests/userprog/create-bound.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/create-bound.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/create-bound.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/create-bound
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/create-bound -a create-bound -- -q  -f run create-bound < /dev/null 2> tests/userprog/create-bound.errors > tests/userprog/create-bound.output
perl -I../.. ../../tests/userprog/create-bound.ck tests/userprog/create-bound tests/userprog/create-bound.result
pass tests/userprog/create-bound
gcc-4.1 -m32 -c ../../tests/userprog/open-normal.c -o tests/userprog/open-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-normal.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-normal -a open-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run open-normal < /dev/null 2> tests/userprog/open-normal.errors > tests/userprog/open-normal.output
perl -I../.. ../../tests/userprog/open-normal.ck tests/userprog/open-normal tests/userprog/open-normal.result
FAIL tests/userprog/open-normal
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-normal:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...userprog/open-normal.c:11)
0x08048101: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/open-missing.c -o tests/userprog/open-missing.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-missing.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-missing.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-missing
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-missing -a open-missing -- -q  -f run open-missing < /dev/null 2> tests/userprog/open-missing.errors > tests/userprog/open-missing.output
perl -I../.. ../../tests/userprog/open-missing.ck tests/userprog/open-missing tests/userprog/open-missing.result
FAIL tests/userprog/open-missing
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-missing:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...serprog/open-missing.c:11)
0x08048101: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/open-boundary.c -o tests/userprog/open-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-boundary.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-boundary -a open-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run open-boundary < /dev/null 2> tests/userprog/open-boundary.errors > tests/userprog/open-boundary.output
perl -I../.. ../../tests/userprog/open-boundary.ck tests/userprog/open-boundary tests/userprog/open-boundary.result
FAIL tests/userprog/open-boundary
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1c8 0x80480c6 0x804819a 0x80487be
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-boundary:
0x0804a1c8: open (...../lib/user/syscall.c:105)
0x080480c6: test_main (...erprog/open-boundary.c:12)
0x0804819a: main (...ild/../../tests/main.c:13)
0x080487be: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/open-empty.c -o tests/userprog/open-empty.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-empty.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-empty.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-empty
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-empty -a open-empty -- -q  -f run open-empty < /dev/null 2> tests/userprog/open-empty.errors > tests/userprog/open-empty.output
perl -I../.. ../../tests/userprog/open-empty.ck tests/userprog/open-empty tests/userprog/open-empty.result
FAIL tests/userprog/open-empty
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-empty:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (.../userprog/open-empty.c:11)
0x08048101: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/open-null.c -o tests/userprog/open-null.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-null.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-null.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-null
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-null -a open-null -- -q  -f run open-null < /dev/null 2> tests/userprog/open-null.errors > tests/userprog/open-null.output
perl -I../.. ../../tests/userprog/open-null.ck tests/userprog/open-null tests/userprog/open-null.result
FAIL tests/userprog/open-null
Kernel panic in run: PANIC at ../../filesys/directory.c:125 in dir_lookup(): assertion `name != NULL' failed.
Call stack: 0xc0028950 0xc002cff1 0xc002c5a8 0xc002c0ac 0xc0021aed 0xc0021c1f 0x804a118 0x80480b2 0x80480ec 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002cff1: dir_lookup (..../filesys/directory.c:127)
0xc002c5a8: filesys_open (..../../filesys/filesys.c:74)
0xc002c0ac: syscall_handler (...../userprog/syscall.c:145)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-null:
0x0804a118: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...s/userprog/open-null.c:12)
0x080480ec: main (...ild/../../tests/main.c:13)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/open-bad-ptr.c -o tests/userprog/open-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-bad-ptr.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-bad-ptr -a open-bad-ptr -- -q  -f run open-bad-ptr < /dev/null 2> tests/userprog/open-bad-ptr.errors > tests/userprog/open-bad-ptr.output
perl -I../.. ../../tests/userprog/open-bad-ptr.ck tests/userprog/open-bad-ptr tests/userprog/open-bad-ptr.result
FAIL tests/userprog/open-bad-ptr
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002ce15 0xc002d000 0xc002c5a8 0xc002c0ac 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048106 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002ce15: lookup (..../filesys/directory.c:103)
0xc002d000: dir_lookup (..../filesys/directory.c:127)
0xc002c5a8: filesys_open (..../../filesys/filesys.c:74)
0xc002c0ac: syscall_handler (...../userprog/syscall.c:145)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-bad-ptr:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...serprog/open-bad-ptr.c:11)
0x08048106: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/open-twice.c -o tests/userprog/open-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/open-twice.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/open-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/open-twice
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/open-twice -a open-twice -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run open-twice < /dev/null 2> tests/userprog/open-twice.errors > tests/userprog/open-twice.output
perl -I../.. ../../tests/userprog/open-twice.ck tests/userprog/open-twice tests/userprog/open-twice.result
FAIL tests/userprog/open-twice
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a188 0x80480b3 0x8048165 0x804877e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-twice:
0x0804a188: open (...../lib/user/syscall.c:105)
0x080480b3: test_main (.../userprog/open-twice.c:13)
0x08048165: main (...ild/../../tests/main.c:13)
0x0804877e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/close-normal.c -o tests/userprog/close-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-normal.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-normal -a close-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run close-normal < /dev/null 2> tests/userprog/close-normal.errors > tests/userprog/close-normal.output
perl -I../.. ../../tests/userprog/close-normal.ck tests/userprog/close-normal tests/userprog/close-normal.result
FAIL tests/userprog/close-normal
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a148 0x80480bf 0x8048124 0x804873e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-normal:
0x0804a148: open (...../lib/user/syscall.c:105)
0x080480bf: test_main (...serprog/close-normal.c:11)
0x08048124: main (...ild/../../tests/main.c:13)
0x0804873e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/close-twice.c -o tests/userprog/close-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-twice.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-twice
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-twice -a close-twice -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run close-twice < /dev/null 2> tests/userprog/close-twice.errors > tests/userprog/close-twice.output
perl -I../.. ../../tests/userprog/close-twice.ck tests/userprog/close-twice tests/userprog/close-twice.result
FAIL tests/userprog/close-twice
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a168 0x80480bf 0x8048138 0x804875e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-twice:
0x0804a168: open (...../lib/user/syscall.c:105)
0x080480bf: test_main (...userprog/close-twice.c:13)
0x08048138: main (...ild/../../tests/main.c:13)
0x0804875e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/close-stdin.c -o tests/userprog/close-stdin.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-stdin.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-stdin.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-stdin
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-stdin -a close-stdin -- -q  -f run close-stdin < /dev/null 2> tests/userprog/close-stdin.errors > tests/userprog/close-stdin.output
perl -I../.. ../../tests/userprog/close-stdin.ck tests/userprog/close-stdin tests/userprog/close-stdin.result
pass tests/userprog/close-stdin
gcc-4.1 -m32 -c ../../tests/userprog/close-stdout.c -o tests/userprog/close-stdout.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-stdout.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-stdout.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-stdout
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-stdout -a close-stdout -- -q  -f run close-stdout < /dev/null 2> tests/userprog/close-stdout.errors > tests/userprog/close-stdout.output
perl -I../.. ../../tests/userprog/close-stdout.ck tests/userprog/close-stdout tests/userprog/close-stdout.result
pass tests/userprog/close-stdout
gcc-4.1 -m32 -c ../../tests/userprog/close-bad-fd.c -o tests/userprog/close-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/close-bad-fd.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/close-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/close-bad-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/close-bad-fd -a close-bad-fd -- -q  -f run close-bad-fd < /dev/null 2> tests/userprog/close-bad-fd.errors > tests/userprog/close-bad-fd.output
perl -I../.. ../../tests/userprog/close-bad-fd.ck tests/userprog/close-bad-fd tests/userprog/close-bad-fd.result
pass tests/userprog/close-bad-fd
gcc-4.1 -m32 -c ../../tests/userprog/read-normal.c -o tests/userprog/read-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-normal.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-normal -a read-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run read-normal < /dev/null 2> tests/userprog/read-normal.errors > tests/userprog/read-normal.output
perl -I../.. ../../tests/userprog/read-normal.ck tests/userprog/read-normal tests/userprog/read-normal.result
FAIL tests/userprog/read-normal
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80485a6 0x80480c2 0x80480fc 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-normal:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080485a6: check_file (...ild/../../tests/lib.c:155)
0x080480c2: test_main (...userprog/read-normal.c:11)
0x080480fc: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/read-bad-ptr.c -o tests/userprog/read-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-bad-ptr.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-bad-ptr -a read-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run read-bad-ptr < /dev/null 2> tests/userprog/read-bad-ptr.errors > tests/userprog/read-bad-ptr.output
perl -I../.. ../../tests/userprog/read-bad-ptr.ck tests/userprog/read-bad-ptr tests/userprog/read-bad-ptr.result
FAIL tests/userprog/read-bad-ptr
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a158 0x80480be 0x804812b 0x804874e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-bad-ptr:
0x0804a158: open (...../lib/user/syscall.c:105)
0x080480be: test_main (...serprog/read-bad-ptr.c:12)
0x0804812b: main (...ild/../../tests/main.c:13)
0x0804874e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/read-boundary.c -o tests/userprog/read-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-boundary.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-boundary -a read-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run read-boundary < /dev/null 2> tests/userprog/read-boundary.errors > tests/userprog/read-boundary.output
perl -I../.. ../../tests/userprog/read-boundary.ck tests/userprog/read-boundary tests/userprog/read-boundary.result
FAIL tests/userprog/read-boundary
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a248 0x80480c0 0x804821a 0x804883e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-boundary:
0x0804a248: open (...../lib/user/syscall.c:105)
0x080480c0: test_main (...erprog/read-boundary.c:18)
0x0804821a: main (...ild/../../tests/main.c:13)
0x0804883e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/read-zero.c -o tests/userprog/read-zero.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-zero.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-zero.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-zero
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-zero -a read-zero -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run read-zero < /dev/null 2> tests/userprog/read-zero.errors > tests/userprog/read-zero.output
perl -I../.. ../../tests/userprog/read-zero.ck tests/userprog/read-zero tests/userprog/read-zero.result
FAIL tests/userprog/read-zero
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a178 0x80480be 0x804814c 0x804876e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-zero:
0x0804a178: open (...../lib/user/syscall.c:105)
0x080480be: test_main (...s/userprog/read-zero.c:14)
0x0804814c: main (...ild/../../tests/main.c:13)
0x0804876e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/read-stdout.c -o tests/userprog/read-stdout.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-stdout.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-stdout.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-stdout
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-stdout -a read-stdout -- -q  -f run read-stdout < /dev/null 2> tests/userprog/read-stdout.errors > tests/userprog/read-stdout.output
perl -I../.. ../../tests/userprog/read-stdout.ck tests/userprog/read-stdout tests/userprog/read-stdout.result
FAIL tests/userprog/read-stdout
Kernel panic in run: PANIC at ../../userprog/syscall.c:244 in syscall_read(): assertion `fd != 1' failed.
Call stack: 0xc0028950 0xc002be36 0xc002c16d 0xc0021aed 0xc0021c1f 0x804a150 0x80480c1 0x80480fb 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002be36: syscall_read (...../userprog/syscall.c:248)
0xc002c16d: syscall_handler (...../userprog/syscall.c:194)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-stdout:
0x0804a150: read (...../lib/user/syscall.c:117)
0x080480c1: test_main (...userprog/read-stdout.c:14)
0x080480fb: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/read-bad-fd.c -o tests/userprog/read-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/read-bad-fd.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/read-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/read-bad-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/read-bad-fd -a read-bad-fd -- -q  -f run read-bad-fd < /dev/null 2> tests/userprog/read-bad-fd.errors > tests/userprog/read-bad-fd.output
perl -I../.. ../../tests/userprog/read-bad-fd.ck tests/userprog/read-bad-fd tests/userprog/read-bad-fd.result
FAIL tests/userprog/read-bad-fd
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002be79 0xc002c16d 0xc0021aed 0xc0021c1f 0x804a1e0 0x80480c2 0x8048190 0x80487ae
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002be79: syscall_read (...../userprog/syscall.c:263)
0xc002c16d: syscall_handler (...../userprog/syscall.c:194)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-bad-fd:
0x0804a1e0: read (...../lib/user/syscall.c:117)
0x080480c2: test_main (...userprog/read-bad-fd.c:15)
0x08048190: main (...ild/../../tests/main.c:13)
0x080487ae: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/write-normal.c -o tests/userprog/write-normal.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-normal.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-normal.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-normal
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-normal -a write-normal -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run write-normal < /dev/null 2> tests/userprog/write-normal.errors > tests/userprog/write-normal.output
perl -I../.. ../../tests/userprog/write-normal.ck tests/userprog/write-normal tests/userprog/write-normal.result
FAIL tests/userprog/write-normal
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a198 0x80480ee 0x8048170 0x804878e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-normal:
0x0804a198: open (...../lib/user/syscall.c:105)
0x080480ee: test_main (...serprog/write-normal.c:14)
0x08048170: main (...ild/../../tests/main.c:13)
0x0804878e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/write-bad-ptr.c -o tests/userprog/write-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-bad-ptr.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-bad-ptr -a write-bad-ptr -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run write-bad-ptr < /dev/null 2> tests/userprog/write-bad-ptr.errors > tests/userprog/write-bad-ptr.output
perl -I../.. ../../tests/userprog/write-bad-ptr.ck tests/userprog/write-bad-ptr tests/userprog/write-bad-ptr.result
FAIL tests/userprog/write-bad-ptr
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a158 0x80480be 0x804812b 0x804874e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-bad-ptr:
0x0804a158: open (...../lib/user/syscall.c:105)
0x080480be: test_main (...erprog/write-bad-ptr.c:12)
0x0804812b: main (...ild/../../tests/main.c:13)
0x0804874e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/write-boundary.c -o tests/userprog/write-boundary.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-boundary.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-boundary.o tests/userprog/boundary.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-boundary
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-boundary -a write-boundary -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run write-boundary < /dev/null 2> tests/userprog/write-boundary.errors > tests/userprog/write-boundary.output
perl -I../.. ../../tests/userprog/write-boundary.ck tests/userprog/write-boundary tests/userprog/write-boundary.result
FAIL tests/userprog/write-boundary
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a208 0x80480cd 0x80481d8 0x80487fe
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-boundary:
0x0804a208: open (...../lib/user/syscall.c:105)
0x080480cd: test_main (...rprog/write-boundary.c:20)
0x080481d8: main (...ild/../../tests/main.c:13)
0x080487fe: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/write-zero.c -o tests/userprog/write-zero.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-zero.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-zero.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-zero
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-zero -a write-zero -p ../../tests/userprog/sample.txt -a sample.txt -- -q  -f run write-zero < /dev/null 2> tests/userprog/write-zero.errors > tests/userprog/write-zero.output
perl -I../.. ../../tests/userprog/write-zero.ck tests/userprog/write-zero tests/userprog/write-zero.result
FAIL tests/userprog/write-zero
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a168 0x80480be 0x804813a 0x804875e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-zero:
0x0804a168: open (...../lib/user/syscall.c:105)
0x080480be: test_main (.../userprog/write-zero.c:14)
0x0804813a: main (...ild/../../tests/main.c:13)
0x0804875e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/write-stdin.c -o tests/userprog/write-stdin.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-stdin.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-stdin.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-stdin
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-stdin -a write-stdin -- -q  -f run write-stdin < /dev/null 2> tests/userprog/write-stdin.errors > tests/userprog/write-stdin.output
perl -I../.. ../../tests/userprog/write-stdin.ck tests/userprog/write-stdin tests/userprog/write-stdin.result
FAIL tests/userprog/write-stdin
Kernel panic in run: PANIC at ../../userprog/syscall.c:276 in syscall_write(): assertion `fd != 0' failed.
Call stack: 0xc0028950 0xc002bd7d 0xc002c18e 0xc0021aed 0xc0021c1f 0x804a168 0x80480c5 0x80480ff 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bd7d: syscall_write (...../userprog/syscall.c:278)
0xc002c18e: syscall_handler (...../userprog/syscall.c:204)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-stdin:
0x0804a168: write (...../lib/user/syscall.c:123)
0x080480c5: test_main (...userprog/write-stdin.c:14)
0x080480ff: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/write-bad-fd.c -o tests/userprog/write-bad-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/write-bad-fd.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/write-bad-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/write-bad-fd
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/write-bad-fd -a write-bad-fd -- -q  -f run write-bad-fd < /dev/null 2> tests/userprog/write-bad-fd.errors > tests/userprog/write-bad-fd.output
perl -I../.. ../../tests/userprog/write-bad-fd.ck tests/userprog/write-bad-fd tests/userprog/write-bad-fd.result
FAIL tests/userprog/write-bad-fd
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bdb5 0xc002c18e 0xc0021aed 0xc0021c1f 0x804a1f8 0x80480c6 0x8048194 0x80487ae
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002bdb5: syscall_write (...../userprog/syscall.c:285)
0xc002c18e: syscall_handler (...../userprog/syscall.c:204)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-bad-fd:
0x0804a1f8: write (...../lib/user/syscall.c:123)
0x080480c6: test_main (...serprog/write-bad-fd.c:14)
0x08048194: main (...ild/../../tests/main.c:13)
0x080487ae: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/exec-once.c -o tests/userprog/exec-once.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-once.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-once.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-once
gcc-4.1 -m32 -c ../../tests/userprog/child-simple.c -o tests/userprog/child-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-simple.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-simple.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-simple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-once -a exec-once -p tests/userprog/child-simple -a child-simple -- -q  -f run exec-once < /dev/null 2> tests/userprog/exec-once.errors > tests/userprog/exec-once.output
perl -I../.. ../../tests/userprog/exec-once.ck tests/userprog/exec-once tests/userprog/exec-once.result
pass tests/userprog/exec-once
gcc-4.1 -m32 -c ../../tests/userprog/exec-arg.c -o tests/userprog/exec-arg.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-arg.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-arg.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-arg
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/args.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-args
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-arg -a exec-arg -p tests/userprog/child-args -a child-args -- -q  -f run exec-arg < /dev/null 2> tests/userprog/exec-arg.errors > tests/userprog/exec-arg.output
perl -I../.. ../../tests/userprog/exec-arg.ck tests/userprog/exec-arg tests/userprog/exec-arg.result
pass tests/userprog/exec-arg
gcc-4.1 -m32 -c ../../tests/userprog/exec-multiple.c -o tests/userprog/exec-multiple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-multiple.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-multiple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-multiple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-multiple -a exec-multiple -p tests/userprog/child-simple -a child-simple -- -q  -f run exec-multiple < /dev/null 2> tests/userprog/exec-multiple.errors > tests/userprog/exec-multiple.output
perl -I../.. ../../tests/userprog/exec-multiple.ck tests/userprog/exec-multiple tests/userprog/exec-multiple.result
pass tests/userprog/exec-multiple
gcc-4.1 -m32 -c ../../tests/userprog/exec-missing.c -o tests/userprog/exec-missing.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-missing.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-missing.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-missing
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-missing -a exec-missing -- -q  -f run exec-missing < /dev/null 2> tests/userprog/exec-missing.errors > tests/userprog/exec-missing.output
perl -I../.. ../../tests/userprog/exec-missing.ck tests/userprog/exec-missing tests/userprog/exec-missing.result
FAIL tests/userprog/exec-missing
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.24, 0.18, 0.12
gcc-4.1 -m32 -c ../../tests/userprog/exec-bad-ptr.c -o tests/userprog/exec-bad-ptr.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/exec-bad-ptr.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/exec-bad-ptr.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/exec-bad-ptr
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/exec-bad-ptr -a exec-bad-ptr -- -q  -f run exec-bad-ptr < /dev/null 2> tests/userprog/exec-bad-ptr.errors > tests/userprog/exec-bad-ptr.output
perl -I../.. ../../tests/userprog/exec-bad-ptr.ck tests/userprog/exec-bad-ptr tests/userprog/exec-bad-ptr.result
FAIL tests/userprog/exec-bad-ptr
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027fe2 0xc002a9b7 0xc002c020 0xc0021aed 0xc0021c1f 0x804a0c4 0x80480b2 0x80480ec 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027fe2: strlcpy (...ld/../../lib/string.c:333)
0xc002a9b7: process_execute (.../../userprog/process.c:51)
0xc002c020: syscall_handler (...../userprog/syscall.c:112)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-bad-ptr:
0x0804a0c4: exec (.../../lib/user/syscall.c:81)
0x080480b2: test_main (...serprog/exec-bad-ptr.c:11)
0x080480ec: main (...ild/../../tests/main.c:13)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/wait-simple.c -o tests/userprog/wait-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-simple.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-simple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-simple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-simple -a wait-simple -p tests/userprog/child-simple -a child-simple -- -q  -f run wait-simple < /dev/null 2> tests/userprog/wait-simple.errors > tests/userprog/wait-simple.output
perl -I../.. ../../tests/userprog/wait-simple.ck tests/userprog/wait-simple tests/userprog/wait-simple.result
pass tests/userprog/wait-simple
gcc-4.1 -m32 -c ../../tests/userprog/wait-twice.c -o tests/userprog/wait-twice.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-twice.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-twice.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-twice
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-twice -a wait-twice -p tests/userprog/child-simple -a child-simple -- -q  -f run wait-twice < /dev/null 2> tests/userprog/wait-twice.errors > tests/userprog/wait-twice.output
perl -I../.. ../../tests/userprog/wait-twice.ck tests/userprog/wait-twice tests/userprog/wait-twice.result
pass tests/userprog/wait-twice
gcc-4.1 -m32 -c ../../tests/userprog/wait-killed.c -o tests/userprog/wait-killed.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-killed.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-killed.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-killed
gcc-4.1 -m32 -c ../../tests/userprog/child-bad.c -o tests/userprog/child-bad.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-bad.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-bad.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-bad
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-killed -a wait-killed -p tests/userprog/child-bad -a child-bad -- -q  -f run wait-killed < /dev/null 2> tests/userprog/wait-killed.errors > tests/userprog/wait-killed.output
perl -I../.. ../../tests/userprog/wait-killed.ck tests/userprog/wait-killed tests/userprog/wait-killed.result
FAIL tests/userprog/wait-killed
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bf2c 0xc0021aed 0xc0021c1f 0x80480ad 0x80480f1 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002bf2c: syscall_handler (.../../userprog/syscall.c:50)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/wait-killed:
0x080480ad: test_main (...userprog/wait-killed.c:10)
0x080480f1: main (...ild/../../tests/main.c:10)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/wait-bad-pid.c -o tests/userprog/wait-bad-pid.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/wait-bad-pid.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/wait-bad-pid.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/wait-bad-pid
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/wait-bad-pid -a wait-bad-pid -- -q  -f run wait-bad-pid < /dev/null 2> tests/userprog/wait-bad-pid.errors > tests/userprog/wait-bad-pid.output
perl -I../.. ../../tests/userprog/wait-bad-pid.ck tests/userprog/wait-bad-pid tests/userprog/wait-bad-pid.result
pass tests/userprog/wait-bad-pid
gcc-4.1 -m32 -c ../../tests/userprog/multi-recurse.c -o tests/userprog/multi-recurse.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/multi-recurse.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/multi-recurse.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/multi-recurse
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/multi-recurse -a multi-recurse -- -q  -f run 'multi-recurse 15' < /dev/null 2> tests/userprog/multi-recurse.errors > tests/userprog/multi-recurse.output
perl -I../.. ../../tests/userprog/multi-recurse.ck tests/userprog/multi-recurse tests/userprog/multi-recurse.result
pass tests/userprog/multi-recurse
gcc-4.1 -m32 -c ../../tests/userprog/multi-child-fd.c -o tests/userprog/multi-child-fd.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/multi-child-fd.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/multi-child-fd.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/multi-child-fd
gcc-4.1 -m32 -c ../../tests/userprog/child-close.c -o tests/userprog/child-close.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-close.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-close.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-close
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/multi-child-fd -a multi-child-fd -p ../../tests/userprog/sample.txt -a sample.txt -p tests/userprog/child-close -a child-close -- -q  -f run multi-child-fd < /dev/null 2> tests/userprog/multi-child-fd.errors > tests/userprog/multi-child-fd.output
perl -I../.. ../../tests/userprog/multi-child-fd.ck tests/userprog/multi-child-fd tests/userprog/multi-child-fd.result
FAIL tests/userprog/multi-child-fd
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1a8 0x80480c3 0x804817a 0x804879e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/multi-child-fd:
0x0804a1a8: open (...../lib/user/syscall.c:105)
0x080480c3: test_main (...rprog/multi-child-fd.c:18)
0x0804817a: main (...ild/../../tests/main.c:13)
0x0804879e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/rox-simple.c -o tests/userprog/rox-simple.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-simple.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-simple.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-simple
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/rox-simple -a rox-simple -- -q  -f run rox-simple < /dev/null 2> tests/userprog/rox-simple.errors > tests/userprog/rox-simple.output
perl -I../.. ../../tests/userprog/rox-simple.ck tests/userprog/rox-simple tests/userprog/rox-simple.result
FAIL tests/userprog/rox-simple
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1a8 0x80480bf 0x8048177 0x804879e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-simple:
0x0804a1a8: open (...../lib/user/syscall.c:105)
0x080480bf: test_main (.../userprog/rox-simple.c:14)
0x08048177: main (...ild/../../tests/main.c:13)
0x0804879e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/rox-child.c -o tests/userprog/rox-child.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-child.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-child.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-child
gcc-4.1 -m32 -c ../../tests/userprog/child-rox.c -o tests/userprog/child-rox.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/child-rox.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/child-rox.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/child-rox
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/rox-child -a rox-child -p tests/userprog/child-rox -a child-rox -- -q  -f run rox-child < /dev/null 2> tests/userprog/rox-child.errors > tests/userprog/rox-child.output
perl -I../.. ../../tests/userprog/rox-child.ck tests/userprog/rox-child tests/userprog/rox-child.result
FAIL tests/userprog/rox-child
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a268 0x80480c0 0x804823c 0x804885e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-child:
0x0804a268: open (...../lib/user/syscall.c:105)
0x080480c0: test_main (...userprog/rox-child.inc:16)
0x0804823c: main (...ild/../../tests/main.c:13)
0x0804885e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/rox-multichild.c -o tests/userprog/rox-multichild.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/rox-multichild.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/rox-multichild.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/rox-multichild
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/rox-multichild -a rox-multichild -p tests/userprog/child-rox -a child-rox -- -q  -f run rox-multichild < /dev/null 2> tests/userprog/rox-multichild.errors > tests/userprog/rox-multichild.output
perl -I../.. ../../tests/userprog/rox-multichild.ck tests/userprog/rox-multichild tests/userprog/rox-multichild.result
FAIL tests/userprog/rox-multichild
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002c0be 0xc0021aed 0xc0021c1f 0x804a268 0x80480c0 0x804823c 0x804885e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002c0be: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-multichild:
0x0804a268: open (...../lib/user/syscall.c:105)
0x080480c0: test_main (...userprog/rox-child.inc:16)
0x0804823c: main (...ild/../../tests/main.c:13)
0x0804885e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/userprog/bad-read.c -o tests/userprog/bad-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-read.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-read.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-read
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-read -a bad-read -- -q  -f run bad-read < /dev/null 2> tests/userprog/bad-read.errors > tests/userprog/bad-read.output
perl -I../.. ../../tests/userprog/bad-read.ck tests/userprog/bad-read tests/userprog/bad-read.result
FAIL tests/userprog/bad-read
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.15, 0.18, 0.12
gcc-4.1 -m32 -c ../../tests/userprog/bad-write.c -o tests/userprog/bad-write.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-write.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-write.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-write
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-write -a bad-write -- -q  -f run bad-write < /dev/null 2> tests/userprog/bad-write.errors > tests/userprog/bad-write.output
perl -I../.. ../../tests/userprog/bad-write.ck tests/userprog/bad-write tests/userprog/bad-write.result
FAIL tests/userprog/bad-write
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.11, 0.16, 0.12
gcc-4.1 -m32 -c ../../tests/userprog/bad-read2.c -o tests/userprog/bad-read2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-read2.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-read2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-read2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-read2 -a bad-read2 -- -q  -f run bad-read2 < /dev/null 2> tests/userprog/bad-read2.errors > tests/userprog/bad-read2.output
perl -I../.. ../../tests/userprog/bad-read2.ck tests/userprog/bad-read2 tests/userprog/bad-read2.result
FAIL tests/userprog/bad-read2
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.10, 0.14, 0.11
gcc-4.1 -m32 -c ../../tests/userprog/bad-write2.c -o tests/userprog/bad-write2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-write2.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-write2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-write2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-write2 -a bad-write2 -- -q  -f run bad-write2 < /dev/null 2> tests/userprog/bad-write2.errors > tests/userprog/bad-write2.output
perl -I../.. ../../tests/userprog/bad-write2.ck tests/userprog/bad-write2 tests/userprog/bad-write2.result
FAIL tests/userprog/bad-write2
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.17, 0.16, 0.11
gcc-4.1 -m32 -c ../../tests/userprog/bad-jump.c -o tests/userprog/bad-jump.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-jump.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-jump.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-jump
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-jump -a bad-jump -- -q  -f run bad-jump < /dev/null 2> tests/userprog/bad-jump.errors > tests/userprog/bad-jump.output
perl -I../.. ../../tests/userprog/bad-jump.ck tests/userprog/bad-jump tests/userprog/bad-jump.result
FAIL tests/userprog/bad-jump
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.06, 0.13, 0.10
gcc-4.1 -m32 -c ../../tests/userprog/bad-jump2.c -o tests/userprog/bad-jump2.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/bad-jump2.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/bad-jump2.o tests/main.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/bad-jump2
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/userprog/bad-jump2 -a bad-jump2 -- -q  -f run bad-jump2 < /dev/null 2> tests/userprog/bad-jump2.errors > tests/userprog/bad-jump2.output
perl -I../.. ../../tests/userprog/bad-jump2.ck tests/userprog/bad-jump2 tests/userprog/bad-jump2.result
FAIL tests/userprog/bad-jump2
run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.02, 0.10, 0.09
gcc-4.1 -m32 -c ../../tests/userprog/no-vm/multi-oom.c -o tests/userprog/no-vm/multi-oom.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/userprog/no-vm/multi-oom.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/userprog/no-vm/multi-oom.o tests/lib.o lib/user/entry.o libc.a -o tests/userprog/no-vm/multi-oom
pintos -v -k -T 360 --qemu  --filesys-size=2 -p tests/userprog/no-vm/multi-oom -a multi-oom -- -q  -f run multi-oom < /dev/null 2> tests/userprog/no-vm/multi-oom.errors > tests/userprog/no-vm/multi-oom.output
perl -I../.. ../../tests/userprog/no-vm/multi-oom.ck tests/userprog/no-vm/multi-oom tests/userprog/no-vm/multi-oom.result
FAIL tests/userprog/no-vm/multi-oom
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002c0be 0xc0021aed 0xc0021c1f 0x804a768 0x80480b9 0x80480d8 0x8048237 0x804896e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002c0be: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/no-vm/multi-oom:
0x0804a768: open (...../lib/user/syscall.c:105)
0x080480b9: consume_some_resources (...prog/no-vm/multi-oom.c:59)
0x080480d8: consume_some_resources_and_die (...prog/no-vm/multi-oom.c:69)
0x08048237: main (...rog/no-vm/multi-oom.c:119)
0x0804896e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/lg-create.c -o tests/filesys/base/lg-create.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-create.d
gcc-4.1 -m32 -c ../../tests/filesys/seq-test.c -o tests/filesys/seq-test.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/seq-test.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-create.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-create
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-create -a lg-create -- -q  -f run lg-create < /dev/null 2> tests/filesys/base/lg-create.errors > tests/filesys/base/lg-create.output
perl -I../.. ../../tests/filesys/base/lg-create.ck tests/filesys/base/lg-create tests/filesys/base/lg-create.result
FAIL tests/filesys/base/lg-create
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x8048596 0x8048102 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-create:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x08048596: check_file (...ild/../../tests/lib.c:155)
0x08048102: test_main (...sts/filesys/create.inc:15)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/lg-full.c -o tests/filesys/base/lg-full.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-full.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-full.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-full
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-full -a lg-full -- -q  -f run lg-full < /dev/null 2> tests/filesys/base/lg-full.errors > tests/filesys/base/lg-full.output
perl -I../.. ../../tests/filesys/base/lg-full.ck tests/filesys/base/lg-full tests/filesys/base/lg-full.result
FAIL tests/filesys/base/lg-full
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-full:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (.../filesys/base/full.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/lg-random.c -o tests/filesys/base/lg-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-random.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-random
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-random -a lg-random -- -q  -f run lg-random < /dev/null 2> tests/filesys/base/lg-random.errors > tests/filesys/base/lg-random.output
perl -I../.. ../../tests/filesys/base/lg-random.ck tests/filesys/base/lg-random tests/filesys/base/lg-random.result
FAIL tests/filesys/base/lg-random
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a468 0x8048140 0x8048a32 0x8048a64
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-random:
0x0804a468: open (...../lib/user/syscall.c:105)
0x08048140: test_main (...ilesys/base/random.inc:33)
0x08048a32: main (...ild/../../tests/main.c:13)
0x08048a64: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/lg-seq-block.c -o tests/filesys/base/lg-seq-block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-seq-block.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-seq-block.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-seq-block
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-seq-block -a lg-seq-block -- -q  -f run lg-seq-block < /dev/null 2> tests/filesys/base/lg-seq-block.errors > tests/filesys/base/lg-seq-block.output
perl -I../.. ../../tests/filesys/base/lg-seq-block.ck tests/filesys/base/lg-seq-block tests/filesys/base/lg-seq-block.result
FAIL tests/filesys/base/lg-seq-block
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-seq-block:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (...sys/base/seq-block.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/lg-seq-random.c -o tests/filesys/base/lg-seq-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/lg-seq-random.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/lg-seq-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/lg-seq-random
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/lg-seq-random -a lg-seq-random -- -q  -f run lg-seq-random < /dev/null 2> tests/filesys/base/lg-seq-random.errors > tests/filesys/base/lg-seq-random.output
perl -I../.. ../../tests/filesys/base/lg-seq-random.ck tests/filesys/base/lg-seq-random tests/filesys/base/lg-seq-random.result
FAIL tests/filesys/base/lg-seq-random
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x804876b 0x80480e6 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-seq-random:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x0804876b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e6: test_main (...ys/base/seq-random.inc:22)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/sm-create.c -o tests/filesys/base/sm-create.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-create.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-create.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-create
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-create -a sm-create -- -q  -f run sm-create < /dev/null 2> tests/filesys/base/sm-create.errors > tests/filesys/base/sm-create.output
perl -I../.. ../../tests/filesys/base/sm-create.ck tests/filesys/base/sm-create tests/filesys/base/sm-create.result
FAIL tests/filesys/base/sm-create
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x8048596 0x8048102 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-create:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x08048596: check_file (...ild/../../tests/lib.c:155)
0x08048102: test_main (...sts/filesys/create.inc:15)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/sm-full.c -o tests/filesys/base/sm-full.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-full.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-full.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-full
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-full -a sm-full -- -q  -f run sm-full < /dev/null 2> tests/filesys/base/sm-full.errors > tests/filesys/base/sm-full.output
perl -I../.. ../../tests/filesys/base/sm-full.ck tests/filesys/base/sm-full tests/filesys/base/sm-full.result
FAIL tests/filesys/base/sm-full
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-full:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (.../filesys/base/full.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/sm-random.c -o tests/filesys/base/sm-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-random.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-random
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-random -a sm-random -- -q  -f run sm-random < /dev/null 2> tests/filesys/base/sm-random.errors > tests/filesys/base/sm-random.output
perl -I../.. ../../tests/filesys/base/sm-random.ck tests/filesys/base/sm-random tests/filesys/base/sm-random.result
FAIL tests/filesys/base/sm-random
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a448 0x804813b 0x8048a12 0x8048a44
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-random:
0x0804a448: open (...../lib/user/syscall.c:105)
0x0804813b: test_main (...ilesys/base/random.inc:33)
0x08048a12: main (...ild/../../tests/main.c:13)
0x08048a44: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/sm-seq-block.c -o tests/filesys/base/sm-seq-block.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-seq-block.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-seq-block.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-seq-block
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-seq-block -a sm-seq-block -- -q  -f run sm-seq-block < /dev/null 2> tests/filesys/base/sm-seq-block.errors > tests/filesys/base/sm-seq-block.output
perl -I../.. ../../tests/filesys/base/sm-seq-block.ck tests/filesys/base/sm-seq-block tests/filesys/base/sm-seq-block.result
FAIL tests/filesys/base/sm-seq-block
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-seq-block:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (...sys/base/seq-block.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/sm-seq-random.c -o tests/filesys/base/sm-seq-random.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/sm-seq-random.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/sm-seq-random.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/sm-seq-random
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/sm-seq-random -a sm-seq-random -- -q  -f run sm-seq-random < /dev/null 2> tests/filesys/base/sm-seq-random.errors > tests/filesys/base/sm-seq-random.output
perl -I../.. ../../tests/filesys/base/sm-seq-random.ck tests/filesys/base/sm-seq-random tests/filesys/base/sm-seq-random.result
FAIL tests/filesys/base/sm-seq-random
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x804876b 0x80480e6 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-seq-random:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x0804876b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e6: test_main (...ys/base/seq-random.inc:22)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/syn-read.c -o tests/filesys/base/syn-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/syn-read.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/syn-read.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/syn-read
gcc-4.1 -m32 -c ../../tests/filesys/base/child-syn-read.c -o tests/filesys/base/child-syn-read.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/child-syn-read.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/child-syn-read.o tests/lib.o tests/filesys/seq-test.o lib/user/entry.o libc.a -o tests/filesys/base/child-syn-read
pintos -v -k -T 300 --qemu  --filesys-size=2 -p tests/filesys/base/syn-read -a syn-read -p tests/filesys/base/child-syn-read -a child-syn-read -- -q  -f run syn-read < /dev/null 2> tests/filesys/base/syn-read.errors > tests/filesys/base/syn-read.output
perl -I../.. ../../tests/filesys/base/syn-read.ck tests/filesys/base/syn-read tests/filesys/base/syn-read.result
FAIL tests/filesys/base/syn-read
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a368 0x8048107 0x8048932 0x8048964
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/syn-read:
0x0804a368: open (...../lib/user/syscall.c:105)
0x08048107: test_main (...ilesys/base/syn-read.c:23)
0x08048932: main (...ild/../../tests/main.c:13)
0x08048964: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/syn-remove.c -o tests/filesys/base/syn-remove.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/syn-remove.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/syn-remove.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/syn-remove
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/syn-remove -a syn-remove -- -q  -f run syn-remove < /dev/null 2> tests/filesys/base/syn-remove.errors > tests/filesys/base/syn-remove.output
perl -I../.. ../../tests/filesys/base/syn-remove.ck tests/filesys/base/syn-remove tests/filesys/base/syn-remove.result
FAIL tests/filesys/base/syn-remove
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a408 0x8048107 0x80489d2 0x8048a04
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/syn-remove:
0x0804a408: open (...../lib/user/syscall.c:105)
0x08048107: test_main (...esys/base/syn-remove.c:20)
0x080489d2: main (...ild/../../tests/main.c:13)
0x08048a04: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
gcc-4.1 -m32 -c ../../tests/filesys/base/syn-write.c -o tests/filesys/base/syn-write.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/syn-write.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/syn-write.o tests/lib.o tests/filesys/seq-test.o tests/main.o lib/user/entry.o libc.a -o tests/filesys/base/syn-write
gcc-4.1 -m32 -c ../../tests/filesys/base/child-syn-wrt.c -o tests/filesys/base/child-syn-wrt.o -g -msoft-float -O -fno-stack-protector -nostdinc -I../.. -I../../lib -I../../lib/user -I. -Wall -W -Wstrict-prototypes -Wmissing-prototypes -Wsystem-headers  -MMD -MF tests/filesys/base/child-syn-wrt.d
gcc-4.1 -m32  -Wl,--build-id=none -nostdlib -static -Wl,-T,../../lib/user/user.lds tests/filesys/base/child-syn-wrt.o tests/lib.o tests/filesys/seq-test.o lib/user/entry.o libc.a -o tests/filesys/base/child-syn-wrt
pintos -v -k -T 60 --qemu  --filesys-size=2 -p tests/filesys/base/syn-write -a syn-write -p tests/filesys/base/child-syn-wrt -a child-syn-wrt -- -q  -f run syn-write < /dev/null 2> tests/filesys/base/syn-write.errors > tests/filesys/base/syn-write.output
perl -I../.. ../../tests/filesys/base/syn-write.ck tests/filesys/base/syn-write tests/filesys/base/syn-write.result
FAIL tests/filesys/base/syn-write
Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a718 0x804813a 0x8048922
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0x0804a718: (unknown)
In tests/filesys/base/syn-write:
0x0804813a: test_main (...lesys/base/syn-write.c:27)
0x08048922: main (...uild/../../tests/main.c:8)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.
../../tests/make-grade ../.. results ../../tests/userprog/Grading | tee grade
TOTAL TESTING SCORE: 31.1%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY BY TEST SET

Test Set                                      Pts Max  % Ttl  % Max
--------------------------------------------- --- --- ------ ------
tests/userprog/Rubric.functionality            75/108  24.3%/ 35.0%
tests/userprog/Rubric.robustness               24/ 88   6.8%/ 25.0%
tests/userprog/no-vm/Rubric                     0/  1   0.0%/ 10.0%
tests/filesys/base/Rubric                       0/ 30   0.0%/ 30.0%
--------------------------------------------- --- --- ------ ------
Total                                                  31.1%/100.0%

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

SUMMARY OF INDIVIDUAL TESTS

Functionality of system calls (tests/userprog/Rubric.functionality):
	- Test argument passing on Pintos command line.
	     3/ 3 tests/userprog/args-none
	     3/ 3 tests/userprog/args-single
	     3/ 3 tests/userprog/args-multiple
	     3/ 3 tests/userprog/args-many
	     3/ 3 tests/userprog/args-dbl-space

	- Test "create" system call.
	     3/ 3 tests/userprog/create-empty
	     3/ 3 tests/userprog/create-long
	     3/ 3 tests/userprog/create-normal
	     3/ 3 tests/userprog/create-exists

	- Test "open" system call.
	  ** 0/ 3 tests/userprog/open-missing
	  ** 0/ 3 tests/userprog/open-normal
	  ** 0/ 3 tests/userprog/open-twice

	- Test "read" system call.
	  ** 0/ 3 tests/userprog/read-normal
	  ** 0/ 3 tests/userprog/read-zero

	- Test "write" system call.
	  ** 0/ 3 tests/userprog/write-normal
	  ** 0/ 3 tests/userprog/write-zero

	- Test "close" system call.
	  ** 0/ 3 tests/userprog/close-normal

	- Test "exec" system call.
	     5/ 5 tests/userprog/exec-once
	     5/ 5 tests/userprog/exec-multiple
	     5/ 5 tests/userprog/exec-arg

	- Test "wait" system call.
	     5/ 5 tests/userprog/wait-simple
	     5/ 5 tests/userprog/wait-twice

	- Test "exit" system call.
	     5/ 5 tests/userprog/exit

	- Test "halt" system call.
	     3/ 3 tests/userprog/halt

	- Test recursive execution of user programs.
	    15/15 tests/userprog/multi-recurse

	- Test read-only executable feature.
	  ** 0/ 3 tests/userprog/rox-simple
	  ** 0/ 3 tests/userprog/rox-child
	  ** 0/ 3 tests/userprog/rox-multichild

	- Section summary.
	     17/ 28 tests passed
	     75/108 points subtotal

Robustness of system calls (tests/userprog/Rubric.robustness):
	- Test robustness of file descriptor handling.
	     2/ 2 tests/userprog/close-stdin
	     2/ 2 tests/userprog/close-stdout
	     2/ 2 tests/userprog/close-bad-fd
	  ** 0/ 2 tests/userprog/close-twice
	  ** 0/ 2 tests/userprog/read-bad-fd
	  ** 0/ 2 tests/userprog/read-stdout
	  ** 0/ 2 tests/userprog/write-bad-fd
	  ** 0/ 2 tests/userprog/write-stdin
	  ** 0/ 2 tests/userprog/multi-child-fd

	- Test robustness of pointer handling.
	  ** 0/ 3 tests/userprog/create-bad-ptr
	  ** 0/ 3 tests/userprog/exec-bad-ptr
	  ** 0/ 3 tests/userprog/open-bad-ptr
	  ** 0/ 3 tests/userprog/read-bad-ptr
	  ** 0/ 3 tests/userprog/write-bad-ptr

	- Test robustness of buffer copying across page boundaries.
	     3/ 3 tests/userprog/create-bound
	  ** 0/ 3 tests/userprog/open-boundary
	  ** 0/ 3 tests/userprog/read-boundary
	  ** 0/ 3 tests/userprog/write-boundary

	- Test handling of null pointer and empty strings.
	  ** 0/ 2 tests/userprog/create-null
	  ** 0/ 2 tests/userprog/open-null
	  ** 0/ 2 tests/userprog/open-empty

	- Test robustness of system call implementation.
	  ** 0/ 3 tests/userprog/sc-bad-arg
	  ** 0/ 3 tests/userprog/sc-bad-sp
	     5/ 5 tests/userprog/sc-boundary
	     5/ 5 tests/userprog/sc-boundary-2

	- Test robustness of "exec" and "wait" system calls.
	  ** 0/ 5 tests/userprog/exec-missing
	     5/ 5 tests/userprog/wait-bad-pid
	  ** 0/ 5 tests/userprog/wait-killed

	- Test robustness of exception handling.
	  ** 0/ 1 tests/userprog/bad-read
	  ** 0/ 1 tests/userprog/bad-write
	  ** 0/ 1 tests/userprog/bad-jump
	  ** 0/ 1 tests/userprog/bad-read2
	  ** 0/ 1 tests/userprog/bad-write2
	  ** 0/ 1 tests/userprog/bad-jump2

	- Section summary.
	      7/ 34 tests passed
	     24/ 88 points subtotal

Functionality of features that VM might break (tests/userprog/no-vm/Rubric):

	  ** 0/ 1 tests/userprog/no-vm/multi-oom

	- Section summary.
	      0/  1 tests passed
	      0/  1 points subtotal

Functionality of base file system (tests/filesys/base/Rubric):
	- Test basic support for small files.
	  ** 0/ 1 tests/filesys/base/sm-create
	  ** 0/ 2 tests/filesys/base/sm-full
	  ** 0/ 2 tests/filesys/base/sm-random
	  ** 0/ 2 tests/filesys/base/sm-seq-block
	  ** 0/ 3 tests/filesys/base/sm-seq-random

	- Test basic support for large files.
	  ** 0/ 1 tests/filesys/base/lg-create
	  ** 0/ 2 tests/filesys/base/lg-full
	  ** 0/ 2 tests/filesys/base/lg-random
	  ** 0/ 2 tests/filesys/base/lg-seq-block
	  ** 0/ 3 tests/filesys/base/lg-seq-random

	- Test synchronized multiprogram access to files.
	  ** 0/ 4 tests/filesys/base/syn-read
	  ** 0/ 4 tests/filesys/base/syn-write
	  ** 0/ 2 tests/filesys/base/syn-remove

	- Section summary.
	      0/ 13 tests passed
	      0/ 30 points subtotal


- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-missing FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-missing:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...serprog/open-missing.c:11)
0x08048101: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-missing:

Copying tests/userprog/open-missing to scratch partition...
qemu -hda /tmp/user/1002/BvsMWiBlxu.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-missing
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-missing' into the file system...
Erasing ustar archive...
Executing 'open-missing':
(open-missing) begin
Page fault at 0x746361: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00746361 error=00000000
 eax=00746361 ebx=c0007d50 ecx=0804a6d2 edx=0804a6d2
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 85 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 78 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1536 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-normal:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...userprog/open-normal.c:11)
0x08048101: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-normal:

Copying tests/userprog/open-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/AFzzxQe5Wy.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-normal
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 109 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-normal':
(open-normal) begin
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a6d2 edx=0804a6d2
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 82 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 90 reads, 224 writes
hda3 (scratch): 108 reads, 2 writes
Console: 1572 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-twice FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a188 0x80480b3 0x8048165 0x804877e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-twice:
0x0804a188: open (...../lib/user/syscall.c:105)
0x080480b3: test_main (.../userprog/open-twice.c:13)
0x08048165: main (...ild/../../tests/main.c:13)
0x0804877e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-twice:

Copying tests/userprog/open-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/WhCsBYbeGX.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-twice
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-twice':
(open-twice) begin
Page fault at 0x746361: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00746361 error=00000000
 eax=00746361 ebx=c0007d50 ecx=0804a732 edx=0804a732
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a188 0x80480b3 0x8048165 0x804877e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 84 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 226 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1573 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80485a6 0x80480c2 0x80480fc 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-normal:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080485a6: check_file (...ild/../../tests/lib.c:155)
0x080480c2: test_main (...userprog/read-normal.c:11)
0x080480fc: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-normal:

Copying tests/userprog/read-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/hap0ETALa2.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-normal
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-normal':
(read-normal) begin
(read-normal) open "sample.txt" for verification
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a6d2 edx=0804a6d2
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80485a6 0x80480c2 0x80480fc 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 88 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 91 reads, 226 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1631 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-zero FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a178 0x80480be 0x804814c 0x804876e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-zero:
0x0804a178: open (...../lib/user/syscall.c:105)
0x080480be: test_main (...s/userprog/read-zero.c:14)
0x0804814c: main (...ild/../../tests/main.c:13)
0x0804876e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-zero:

Copying tests/userprog/read-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/MvxSnBVdLp.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-zero
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-zero':
(read-zero) begin
(read-zero) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a734 edx=0804a734
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a178 0x80480be 0x804814c 0x804876e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 85 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 226 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1594 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a198 0x80480ee 0x8048170 0x804878e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-normal:
0x0804a198: open (...../lib/user/syscall.c:105)
0x080480ee: test_main (...serprog/write-normal.c:14)
0x08048170: main (...ild/../../tests/main.c:13)
0x0804878e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/write-normal:

Copying tests/userprog/write-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/YRLTMWmUNV.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-normal
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-normal':
(write-normal) begin
(write-normal) create "test.txt"
(write-normal) open "test.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a754 edx=0804a754
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a198 0x80480ee 0x8048170 0x804878e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 114 reads, 233 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1641 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-zero FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a168 0x80480be 0x804813a 0x804875e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-zero:
0x0804a168: open (...../lib/user/syscall.c:105)
0x080480be: test_main (.../userprog/write-zero.c:14)
0x0804813a: main (...ild/../../tests/main.c:13)
0x0804875e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/write-zero:

Copying tests/userprog/write-zero to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/plcTXBL9Nb.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-zero
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  312,934,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-zero' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-zero':
(write-zero) begin
(write-zero) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a724 edx=0804a724
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a168 0x80480be 0x804813a 0x804875e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 226 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1599 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-normal FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a148 0x80480bf 0x8048124 0x804873e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-normal:
0x0804a148: open (...../lib/user/syscall.c:105)
0x080480bf: test_main (...serprog/close-normal.c:11)
0x08048124: main (...ild/../../tests/main.c:13)
0x0804873e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/close-normal:

Copying tests/userprog/close-normal to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/xRygbkav4_.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-normal
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 109 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-normal' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-normal':
(close-normal) begin
(close-normal) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a704 edx=0804a704
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a148 0x80480bf 0x8048124 0x804873e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 90 reads, 224 writes
hda3 (scratch): 108 reads, 2 writes
Console: 1609 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-simple FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1a8 0x80480bf 0x8048177 0x804879e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-simple:
0x0804a1a8: open (...../lib/user/syscall.c:105)
0x080480bf: test_main (.../userprog/rox-simple.c:14)
0x08048177: main (...ild/../../tests/main.c:13)
0x0804879e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/rox-simple:

Copying tests/userprog/rox-simple to scratch partition...
qemu -hda /tmp/user/1002/jttR8J7qit.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-simple
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 108 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-simple' into the file system...
Erasing ustar archive...
Executing 'rox-simple':
(rox-simple) begin
(rox-simple) open "rox-simple"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a764 edx=0804a764
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1a8 0x80480bf 0x8048177 0x804879e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 88 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 66 reads, 220 writes
hda3 (scratch): 107 reads, 2 writes
Console: 1554 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-child FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a268 0x80480c0 0x804823c 0x804885e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-child:
0x0804a268: open (...../lib/user/syscall.c:105)
0x080480c0: test_main (...userprog/rox-child.inc:16)
0x0804823c: main (...ild/../../tests/main.c:13)
0x0804885e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/rox-child:

Copying tests/userprog/rox-child to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/user/1002/twgfw3TUAX.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-child
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 227 sectors (113 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-child' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-child':
(rox-child) begin
(rox-child) open "child-rox"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a823 edx=0804a823
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a268 0x80480c0 0x804823c 0x804885e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 90 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 460 writes
hda3 (scratch): 226 reads, 2 writes
Console: 1593 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/rox-multichild FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002c0be 0xc0021aed 0xc0021c1f 0x804a268 0x80480c0 0x804823c 0x804885e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002c0be: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/rox-multichild:
0x0804a268: open (...../lib/user/syscall.c:105)
0x080480c0: test_main (...userprog/rox-child.inc:16)
0x0804823c: main (...ild/../../tests/main.c:13)
0x0804885e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/rox-multichild:

Copying tests/userprog/rox-multichild to scratch partition...
Copying tests/userprog/child-rox to scratch partition...
qemu -hda /tmp/user/1002/gnL5F4PqYv.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run rox-multichild
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  235,520,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 227 sectors (113 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Erasing ustar archive...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
Page fault at 0xfffffffb: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c0be
 cr2=fffffffb error=00000000
 eax=c010a038 ebx=00000003 ecx=00000063 edx=000000c9
 esi=c010a030 edi=00000000 esp=c010a030 ebp=c010af74
 cs=0008 ds=0010 es=0010 ss=a823
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002c0be 0xc0021aed 0xc0021c1f 0x804a268 0x80480c0 0x804823c 0x804885e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 100 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 460 writes
hda3 (scratch): 226 reads, 2 writes
Console: 1615 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/close-twice FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a168 0x80480bf 0x8048138 0x804875e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/close-twice:
0x0804a168: open (...../lib/user/syscall.c:105)
0x080480bf: test_main (...userprog/close-twice.c:13)
0x08048138: main (...ild/../../tests/main.c:13)
0x0804875e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/close-twice:

Copying tests/userprog/close-twice to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/WP_yhyGEkt.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run close-twice
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 110 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'close-twice' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'close-twice':
(close-twice) begin
(close-twice) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a724 edx=0804a724
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a168 0x80480bf 0x8048138 0x804875e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 226 writes
hda3 (scratch): 109 reads, 2 writes
Console: 1604 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002be79 0xc002c16d 0xc0021aed 0xc0021c1f 0x804a1e0 0x80480c2 0x8048190 0x80487ae
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002be79: syscall_read (...../userprog/syscall.c:263)
0xc002c16d: syscall_handler (...../userprog/syscall.c:194)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-bad-fd:
0x0804a1e0: read (...../lib/user/syscall.c:117)
0x080480c2: test_main (...userprog/read-bad-fd.c:15)
0x08048190: main (...ild/../../tests/main.c:13)
0x080487ae: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-bad-fd:

Copying tests/userprog/read-bad-fd to scratch partition...
qemu -hda /tmp/user/1002/T8lbvi_5AC.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-bad-fd
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 108 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-fd' into the file system...
Erasing ustar archive...
Executing 'read-bad-fd':
(read-bad-fd) begin
Page fault at 0x8948ce68: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002be79
 cr2=8948ce68 error=00000000
 eax=8948ce68 ebx=8948ce74 ecx=00000030 edx=00000001
 esi=c010a030 edi=20101234 esp=c010a030 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0014
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002be79 0xc002c16d 0xc0021aed 0xc0021c1f 0x804a1e0 0x80480c2 0x8048190 0x80487ae.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 90 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 63 reads, 220 writes
hda3 (scratch): 107 reads, 2 writes
Console: 1534 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-stdout FAILURE:

Kernel panic in run: PANIC at ../../userprog/syscall.c:244 in syscall_read(): assertion `fd != 1' failed.
Call stack: 0xc0028950 0xc002be36 0xc002c16d 0xc0021aed 0xc0021c1f 0x804a150 0x80480c1 0x80480fb 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002be36: syscall_read (...../userprog/syscall.c:248)
0xc002c16d: syscall_handler (...../userprog/syscall.c:194)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-stdout:
0x0804a150: read (...../lib/user/syscall.c:117)
0x080480c1: test_main (...userprog/read-stdout.c:14)
0x080480fb: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-stdout:

Copying tests/userprog/read-stdout to scratch partition...
qemu -hda /tmp/user/1002/F4v68si1_G.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-stdout
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-stdout' into the file system...
Erasing ustar archive...
Executing 'read-stdout':
(read-stdout) begin
Kernel PANIC at ../../userprog/syscall.c:244 in syscall_read(): assertion `fd != 1' failed.
Call stack: 0xc0028950 0xc002be36 0xc002c16d 0xc0021aed 0xc0021c1f 0x804a150 0x80480c1 0x80480fb 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 61 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1176 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-bad-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bdb5 0xc002c18e 0xc0021aed 0xc0021c1f 0x804a1f8 0x80480c6 0x8048194 0x80487ae
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002bdb5: syscall_write (...../userprog/syscall.c:285)
0xc002c18e: syscall_handler (...../userprog/syscall.c:204)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-bad-fd:
0x0804a1f8: write (...../lib/user/syscall.c:123)
0x080480c6: test_main (...serprog/write-bad-fd.c:14)
0x08048194: main (...ild/../../tests/main.c:13)
0x080487ae: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/write-bad-fd:

Copying tests/userprog/write-bad-fd to scratch partition...
qemu -hda /tmp/user/1002/G8DV2PQu5b.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-bad-fd
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 108 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-fd' into the file system...
Erasing ustar archive...
Executing 'write-bad-fd':
(write-bad-fd) begin
Page fault at 0x8948ce68: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002bdb5
 cr2=8948ce68 error=00000000
 eax=8948ce68 ebx=8948ce74 ecx=00000030 edx=00000001
 esi=c010a030 edi=01012342 esp=c010a030 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0015
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bdb5 0xc002c18e 0xc0021aed 0xc0021c1f 0x804a1f8 0x80480c6 0x8048194 0x80487ae.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 63 reads, 220 writes
hda3 (scratch): 107 reads, 2 writes
Console: 1538 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-stdin FAILURE:

Kernel panic in run: PANIC at ../../userprog/syscall.c:276 in syscall_write(): assertion `fd != 0' failed.
Call stack: 0xc0028950 0xc002bd7d 0xc002c18e 0xc0021aed 0xc0021c1f 0x804a168 0x80480c5 0x80480ff 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bd7d: syscall_write (...../userprog/syscall.c:278)
0xc002c18e: syscall_handler (...../userprog/syscall.c:204)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-stdin:
0x0804a168: write (...../lib/user/syscall.c:123)
0x080480c5: test_main (...userprog/write-stdin.c:14)
0x080480ff: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/write-stdin:

Copying tests/userprog/write-stdin to scratch partition...
qemu -hda /tmp/user/1002/s6d_Xq_fMW.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-stdin
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-stdin' into the file system...
Erasing ustar archive...
Executing 'write-stdin':
(write-stdin) begin
Kernel PANIC at ../../userprog/syscall.c:276 in syscall_write(): assertion `fd != 0' failed.
Call stack: 0xc0028950 0xc002bd7d 0xc002c18e 0xc0021aed 0xc0021c1f 0x804a168 0x80480c5 0x80480ff 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 85 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 61 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1177 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/multi-child-fd FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1a8 0x80480c3 0x804817a 0x804879e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/multi-child-fd:
0x0804a1a8: open (...../lib/user/syscall.c:105)
0x080480c3: test_main (...rprog/multi-child-fd.c:18)
0x0804817a: main (...ild/../../tests/main.c:13)
0x0804879e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/multi-child-fd:

Copying tests/userprog/multi-child-fd to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
Copying tests/userprog/child-close to scratch partition...
qemu -hda /tmp/user/1002/TuQjXa6uji.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run multi-child-fd
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 227 sectors (113 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-child-fd' into the file system...
Putting 'sample.txt' into the file system...
Putting 'child-close' into the file system...
Erasing ustar archive...
Executing 'multi-child-fd':
(multi-child-fd) begin
(multi-child-fd) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a764 edx=0804a764
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1a8 0x80480c3 0x804817a 0x804879e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 95 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 119 reads, 462 writes
hda3 (scratch): 226 reads, 2 writes
Console: 1667 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002d09d 0xc002c61e 0xc002c053 0xc0021aed 0xc0021c1f 0x804a108 0x80480ba 0x8048107 0x804872e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002d09d: dir_add (..../filesys/directory.c:152)
0xc002c61e: filesys_create (..../../filesys/filesys.c:53)
0xc002c053: syscall_handler (...../userprog/syscall.c:132)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-bad-ptr:
0x0804a108: create (.../../lib/user/syscall.c:93)
0x080480ba: test_main (...rprog/create-bad-ptr.c:11)
0x08048107: main (...ild/../../tests/main.c:13)
0x0804872e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/create-bad-ptr:

Copying tests/userprog/create-bad-ptr to scratch partition...
qemu -hda /tmp/user/1002/Cafewyro9p.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'create-bad-ptr':
(create-bad-ptr) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002d09d
 cr2=20101234 error=00000000
 eax=20101234 ebx=20101234 ecx=c010620c edx=00000001
 esi=c010705c edi=00000000 esp=c010703c ebp=c010aee4
 cs=0008 ds=0010 es=0010 ss=704c
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002d09d 0xc002c61e 0xc002c053 0xc0021aed 0xc0021c1f 0x804a108 0x80480ba 0x8048107 0x804872e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 82 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 62 reads, 221 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1557 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027fe2 0xc002a9b7 0xc002c020 0xc0021aed 0xc0021c1f 0x804a0c4 0x80480b2 0x80480ec 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027fe2: strlcpy (...ld/../../lib/string.c:333)
0xc002a9b7: process_execute (.../../userprog/process.c:51)
0xc002c020: syscall_handler (...../userprog/syscall.c:112)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/exec-bad-ptr:
0x0804a0c4: exec (.../../lib/user/syscall.c:81)
0x080480b2: test_main (...serprog/exec-bad-ptr.c:11)
0x080480ec: main (...ild/../../tests/main.c:13)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/exec-bad-ptr:

Copying tests/userprog/exec-bad-ptr to scratch partition...
qemu -hda /tmp/user/1002/ZLMGpmfj1T.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'exec-bad-ptr':
(exec-bad-ptr) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027fe2
 cr2=20101234 error=00000000
 eax=00000000 ebx=00001000 ecx=ffffffff edx=20101234
 esi=c0109000 edi=20101234 esp=c0033f88 ebp=c010aee4
 cs=0008 ds=0010 es=0010 ss=bbd5
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027fe2 0xc002a9b7 0xc002c020 0xc0021aed 0xc0021c1f 0x804a0c4 0x80480b2 0x80480ec 0x804870e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 61 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1549 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002ce15 0xc002d000 0xc002c5a8 0xc002c0ac 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048106 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002ce15: lookup (..../filesys/directory.c:103)
0xc002d000: dir_lookup (..../filesys/directory.c:127)
0xc002c5a8: filesys_open (..../../filesys/filesys.c:74)
0xc002c0ac: syscall_handler (...../userprog/syscall.c:145)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-bad-ptr:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...serprog/open-bad-ptr.c:11)
0x08048106: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-bad-ptr:

Copying tests/userprog/open-bad-ptr to scratch partition...
qemu -hda /tmp/user/1002/Z06vPA30Ye.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-bad-ptr' into the file system...
Erasing ustar archive...
Executing 'open-bad-ptr':
(open-bad-ptr) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=20101234 error=00000000
 eax=20101234 ebx=00000000 ecx=c010ae88 edx=c010ae88
 esi=00000000 edi=c010705c esp=00000014 ebp=c010ae54
 cs=0008 ds=0010 es=0010 ss=620c
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002ce15 0xc002d000 0xc002c5a8 0xc002c0ac 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048106 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 82 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 63 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1571 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a158 0x80480be 0x804812b 0x804874e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-bad-ptr:
0x0804a158: open (...../lib/user/syscall.c:105)
0x080480be: test_main (...serprog/read-bad-ptr.c:12)
0x0804812b: main (...ild/../../tests/main.c:13)
0x0804874e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-bad-ptr:

Copying tests/userprog/read-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/6G3gUaVC1M.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 109 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-bad-ptr':
(read-bad-ptr) begin
(read-bad-ptr) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a714 edx=0804a714
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a158 0x80480be 0x804812b 0x804874e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 91 reads, 224 writes
hda3 (scratch): 108 reads, 2 writes
Console: 1609 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-bad-ptr FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a158 0x80480be 0x804812b 0x804874e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-bad-ptr:
0x0804a158: open (...../lib/user/syscall.c:105)
0x080480be: test_main (...erprog/write-bad-ptr.c:12)
0x0804812b: main (...ild/../../tests/main.c:13)
0x0804874e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/write-bad-ptr:

Copying tests/userprog/write-bad-ptr to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/JSGVC4ysSi.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-bad-ptr
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 109 sectors (54 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-bad-ptr' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-bad-ptr':
(write-bad-ptr) begin
(write-bad-ptr) open "sample.txt"
Page fault at 0x746361: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00746361 error=00000000
 eax=00746361 ebx=c0007d50 ecx=0804a714 edx=0804a714
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a158 0x80480be 0x804812b 0x804874e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 91 reads, 224 writes
hda3 (scratch): 108 reads, 2 writes
Console: 1619 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1c8 0x80480c6 0x804819a 0x80487be
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-boundary:
0x0804a1c8: open (...../lib/user/syscall.c:105)
0x080480c6: test_main (...erprog/open-boundary.c:12)
0x0804819a: main (...ild/../../tests/main.c:13)
0x080487be: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-boundary:

Copying tests/userprog/open-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/NqvQ7TQzDS.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-boundary
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 112 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'open-boundary':
(open-boundary) begin
(open-boundary) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804cffb edx=0804cffb
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a1c8 0x80480c6 0x804819a 0x80487be.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 84 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 230 writes
hda3 (scratch): 111 reads, 2 writes
Console: 1614 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/read-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a248 0x80480c0 0x804821a 0x804883e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/read-boundary:
0x0804a248: open (...../lib/user/syscall.c:105)
0x080480c0: test_main (...erprog/read-boundary.c:18)
0x0804821a: main (...ild/../../tests/main.c:13)
0x0804883e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/read-boundary:

Copying tests/userprog/read-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/4quAHP7PPu.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run read-boundary
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  225,689,600 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 113 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'read-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'read-boundary':
(read-boundary) begin
(read-boundary) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a804 edx=0804a804
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a248 0x80480c0 0x804821a 0x804883e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 91 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 93 reads, 232 writes
hda3 (scratch): 112 reads, 2 writes
Console: 1614 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/write-boundary FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a208 0x80480cd 0x80481d8 0x80487fe
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/write-boundary:
0x0804a208: open (...../lib/user/syscall.c:105)
0x080480cd: test_main (...rprog/write-boundary.c:20)
0x080481d8: main (...ild/../../tests/main.c:13)
0x080487fe: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/write-boundary:

Copying tests/userprog/write-boundary to scratch partition...
Copying ../../tests/userprog/sample.txt to scratch partition...
qemu -hda /tmp/user/1002/WyMY5tvs5K.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run write-boundary
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 113 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'write-boundary' into the file system...
Putting 'sample.txt' into the file system...
Erasing ustar archive...
Executing 'write-boundary':
(write-boundary) begin
(write-boundary) open "sample.txt"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a7c4 edx=0804a7c4
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a208 0x80480cd 0x80481d8 0x80487fe.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 87 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 92 reads, 232 writes
hda3 (scratch): 112 reads, 2 writes
Console: 1619 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/create-null FAILURE:

Kernel panic in run: PANIC at ../../filesys/directory.c:149 in dir_add(): assertion `name != NULL' failed.
Call stack: 0xc0028950 0xc002d09d 0xc002c61e 0xc002c053 0xc0021aed 0xc0021c1f 0x804a108 0x80480ba 0x8048107 0x804872e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002d09d: dir_add (..../filesys/directory.c:152)
0xc002c61e: filesys_create (..../../filesys/filesys.c:53)
0xc002c053: syscall_handler (...../userprog/syscall.c:132)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/create-null:
0x0804a108: create (.../../lib/user/syscall.c:93)
0x080480ba: test_main (...userprog/create-null.c:10)
0x08048107: main (...ild/../../tests/main.c:13)
0x0804872e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/create-null:

Copying tests/userprog/create-null to scratch partition...
qemu -hda /tmp/user/1002/8SehyZdvBk.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run create-null
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'create-null' into the file system...
Erasing ustar archive...
Executing 'create-null':
(create-null) begin
Kernel PANIC at ../../filesys/directory.c:149 in dir_add(): assertion `name != NULL' failed.
Call stack: 0xc0028950 0xc002d09d 0xc002c61e 0xc002c053 0xc0021aed 0xc0021c1f 0x804a108 0x80480ba 0x8048107 0x804872e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 82 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 62 reads, 221 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1188 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-null FAILURE:

Kernel panic in run: PANIC at ../../filesys/directory.c:125 in dir_lookup(): assertion `name != NULL' failed.
Call stack: 0xc0028950 0xc002cff1 0xc002c5a8 0xc002c0ac 0xc0021aed 0xc0021c1f 0x804a118 0x80480b2 0x80480ec 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002cff1: dir_lookup (..../filesys/directory.c:127)
0xc002c5a8: filesys_open (..../../filesys/filesys.c:74)
0xc002c0ac: syscall_handler (...../userprog/syscall.c:145)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-null:
0x0804a118: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (...s/userprog/open-null.c:12)
0x080480ec: main (...ild/../../tests/main.c:13)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-null:

Copying tests/userprog/open-null to scratch partition...
qemu -hda /tmp/user/1002/iHHWhUeGW_.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-null
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-null' into the file system...
Erasing ustar archive...
Executing 'open-null':
(open-null) begin
Kernel PANIC at ../../filesys/directory.c:125 in dir_lookup(): assertion `name != NULL' failed.
Call stack: 0xc0028950 0xc002cff1 0xc002c5a8 0xc002c0ac 0xc0021aed 0xc0021c1f 0x804a118 0x80480b2 0x80480ec 0x804870e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 81 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 62 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1183 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/open-empty FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/open-empty:
0x0804a128: open (...../lib/user/syscall.c:105)
0x080480b2: test_main (.../userprog/open-empty.c:11)
0x08048101: main (...ild/../../tests/main.c:13)
0x0804871e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/open-empty:

Copying tests/userprog/open-empty to scratch partition...
qemu -hda /tmp/user/1002/mKhC6fSp8S.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run open-empty
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'open-empty' into the file system...
Erasing ustar archive...
Executing 'open-empty':
(open-empty) begin
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a6eb edx=0804a6eb
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a128 0x80480b2 0x8048101 0x804871e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 84 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 78 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1523 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-bad-arg FAILURE:

Test output failed to match any acceptable form.

Acceptable output:
  (sc-bad-arg) begin
  sc-bad-arg: exit(-1)
Differences in `diff -u' format:
  (sc-bad-arg) begin
- sc-bad-arg: exit(-1)
+ sc-bad-arg: exit(-268370093)

OUTPUT FROM tests/userprog/sc-bad-arg:

Copying tests/userprog/sc-bad-arg to scratch partition...
qemu -hda /tmp/user/1002/tkZo_4nZVl.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-bad-arg
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-arg' into the file system...
Erasing ustar archive...
Executing 'sc-bad-arg':
(sc-bad-arg) begin
sc-bad-arg: exit(-268370093)
Execution of 'sc-bad-arg' complete.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 61 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 883 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/sc-bad-sp FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bf2c 0xc0021aed 0xc0021c1f 0x80480ad 0x80480f1 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002bf2c: syscall_handler (.../../userprog/syscall.c:50)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/sc-bad-sp:
0x080480ad: test_main (...s/userprog/sc-bad-sp.c:19)
0x080480f1: main (...ild/../../tests/main.c:13)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/sc-bad-sp:

Copying tests/userprog/sc-bad-sp to scratch partition...
qemu -hda /tmp/user/1002/AEF6Cz4286.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sc-bad-sp
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sc-bad-sp' into the file system...
Erasing ustar archive...
Executing 'sc-bad-sp':
(sc-bad-sp) begin
Page fault at 0x40480a6: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002bf2c
 cr2=040480a6 error=00000000
 eax=c010afb0 ebx=00000000 ecx=00000030 edx=040480a6
 esi=c010afb0 edi=00000000 esp=00000001 ebp=c010af74
 cs=0008 ds=0010 es=0010 ss=bbe0
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bf2c 0xc0021aed 0xc0021c1f 0x80480ad 0x80480f1 0x804870e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 86 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 61 reads, 218 writes
hda3 (scratch): 106 reads, 2 writes
Console: 1504 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/exec-missing FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.24, 0.18, 0.12

OUTPUT FROM tests/userprog/exec-missing:

Copying tests/userprog/exec-missing to scratch partition...
qemu -hda /tmp/user/1002/na0nK8RyBG.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run exec-missing
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'exec-missing' into the file system...
Erasing ustar archive...
Executing 'exec-missing':
(exec-missing) begin
(exec-missing) exec("no-such-file"): 4
(exec-missing) end
exec-missing: exit(0)
load: no-such-file: open failed

TIMEOUT after 61 seconds of wall-clock time - load average: 0.24, 0.18, 0.12

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/wait-killed FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bf2c 0xc0021aed 0xc0021c1f 0x80480ad 0x80480f1 0x804870e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002bf2c: syscall_handler (.../../userprog/syscall.c:50)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/wait-killed:
0x080480ad: test_main (...userprog/wait-killed.c:10)
0x080480f1: main (...ild/../../tests/main.c:10)
0x0804870e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/wait-killed:

Copying tests/userprog/wait-killed to scratch partition...
Copying tests/userprog/child-bad to scratch partition...
qemu -hda /tmp/user/1002/Unx6JE41lj.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run wait-killed
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 212 sectors (106 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'wait-killed' into the file system...
Putting 'child-bad' into the file system...
Erasing ustar archive...
Executing 'wait-killed':
(wait-killed) begin
(child-bad) begin
Page fault at 0x20101234: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002bf2c
 cr2=20101234 error=00000000
 eax=c010efb0 ebx=00000000 ecx=00000030 edx=20101234
 esi=c010efb0 edi=00000000 esp=00000001 ebp=c010ef74
 cs=0008 ds=0010 es=0010 ss=bbe0
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002bf2c 0xc0021aed 0xc0021c1f 0x80480ad 0x80480f1 0x804870e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 93 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 122 reads, 430 writes
hda3 (scratch): 211 reads, 2 writes
Console: 1577 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.15, 0.18, 0.12

OUTPUT FROM tests/userprog/bad-read:

Copying tests/userprog/bad-read to scratch partition...
qemu -hda /tmp/user/1002/DslnHy3f9d.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-read
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read' into the file system...
Erasing ustar archive...
Executing 'bad-read':
(bad-read) begin
Page fault at 0: not present error reading page in user context.
bad-read: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a6
 cr2=00000000 error=00000004
 eax=00000027 ebx=00000000 ecx=000000ad edx=0000000e
 esi=00000000 edi=00000000 esp=bfffffb0 ebp=bfffffb8
 cs=001b ds=0023 es=0023 ss=0023

TIMEOUT after 61 seconds of wall-clock time - load average: 0.15, 0.18, 0.12

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.11, 0.16, 0.12

OUTPUT FROM tests/userprog/bad-write:

Copying tests/userprog/bad-write to scratch partition...
qemu -hda /tmp/user/1002/t9Nd_qhTG3.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-write
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write' into the file system...
Erasing ustar archive...
Executing 'bad-write':
(bad-write) begin
Page fault at 0: not present error writing page in user context.
bad-write: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a6
 cr2=00000000 error=00000006
 eax=00000027 ebx=00000000 ecx=000000ad edx=0000000e
 esi=00000000 edi=00000000 esp=bfffffb0 ebp=bfffffb8
 cs=001b ds=0023 es=0023 ss=0023

TIMEOUT after 61 seconds of wall-clock time - load average: 0.11, 0.16, 0.12

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.06, 0.13, 0.10

OUTPUT FROM tests/userprog/bad-jump:

Copying tests/userprog/bad-jump to scratch partition...
qemu -hda /tmp/user/1002/hjsTHE2kpE.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-jump
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump' into the file system...
Erasing ustar archive...
Executing 'bad-jump':
(bad-jump) begin
Page fault at 0: not present error reading page in user context.
bad-jump: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0
 cr2=00000000 error=00000004
 eax=00000000 ebx=00000000 ecx=000000ad edx=0000000e
 esi=00000000 edi=00000000 esp=bfffffac ebp=bfffffb8
 cs=001b ds=0023 es=0023 ss=0023

TIMEOUT after 61 seconds of wall-clock time - load average: 0.06, 0.13, 0.10

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-read2 FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.10, 0.14, 0.11

OUTPUT FROM tests/userprog/bad-read2:

Copying tests/userprog/bad-read2 to scratch partition...
qemu -hda /tmp/user/1002/Jo2Izl4LCL.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-read2
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  235,520,000 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-read2' into the file system...
Erasing ustar archive...
Executing 'bad-read2':
(bad-read2) begin
Page fault at 0xc0000000: rights violation error reading page in user context.
bad-read2: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a6
 cr2=c0000000 error=00000005
 eax=00000027 ebx=00000000 ecx=000000ad edx=0000000e
 esi=00000000 edi=00000000 esp=bfffffb0 ebp=bfffffb8
 cs=001b ds=0023 es=0023 ss=0023

TIMEOUT after 61 seconds of wall-clock time - load average: 0.10, 0.14, 0.11

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-write2 FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.17, 0.16, 0.11

OUTPUT FROM tests/userprog/bad-write2:

Copying tests/userprog/bad-write2 to scratch partition...
qemu -hda /tmp/user/1002/irw52QIVWr.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-write2
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-write2' into the file system...
Erasing ustar archive...
Executing 'bad-write2':
(bad-write2) begin
Page fault at 0xc0000000: rights violation error writing page in user context.
bad-write2: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0x80480a6
 cr2=c0000000 error=00000007
 eax=00000027 ebx=00000000 ecx=000000ad edx=0000000e
 esi=00000000 edi=00000000 esp=bfffffb0 ebp=bfffffb8
 cs=001b ds=0023 es=0023 ss=0023

TIMEOUT after 61 seconds of wall-clock time - load average: 0.17, 0.16, 0.11

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/bad-jump2 FAILURE:

run: TIMEOUT after 61 seconds of wall-clock time - load average: 0.02, 0.10, 0.09

OUTPUT FROM tests/userprog/bad-jump2:

Copying tests/userprog/bad-jump2 to scratch partition...
qemu -hda /tmp/user/1002/99QkEI_iXT.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run bad-jump2
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  209,510,400 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 107 sectors (53 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'bad-jump2' into the file system...
Erasing ustar archive...
Executing 'bad-jump2':
(bad-jump2) begin
Page fault at 0xc0000000: rights violation error reading page in user context.
bad-jump2: dying due to interrupt 0x0e (#PF Page-Fault Exception).
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0000000
 cr2=c0000000 error=00000005
 eax=c0000000 ebx=00000000 ecx=000000ad edx=0000000e
 esi=00000000 edi=00000000 esp=bfffffac ebp=bfffffb8
 cs=001b ds=0023 es=0023 ss=0023

TIMEOUT after 61 seconds of wall-clock time - load average: 0.02, 0.10, 0.09

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/userprog/no-vm/multi-oom FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002c0be 0xc0021aed 0xc0021c1f 0x804a768 0x80480b9 0x80480d8 0x8048237 0x804896e
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc002c0be: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/userprog/no-vm/multi-oom:
0x0804a768: open (...../lib/user/syscall.c:105)
0x080480b9: consume_some_resources (...prog/no-vm/multi-oom.c:59)
0x080480d8: consume_some_resources_and_die (...prog/no-vm/multi-oom.c:69)
0x08048237: main (...rog/no-vm/multi-oom.c:119)
0x0804896e: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/userprog/no-vm/multi-oom:

Copying tests/userprog/no-vm/multi-oom to scratch partition...
qemu -hda /tmp/user/1002/tq7PAC7g3Y.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run multi-oom
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 124 sectors (62 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'multi-oom' into the file system...
Erasing ustar archive...
Executing 'multi-oom':
(multi-oom) begin
Page fault at 0x1b: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc002c0be
 cr2=0000001b error=00000000
 eax=c014e038 ebx=00000023 ecx=0000006d edx=000000c9
 esi=c014e030 edi=0804b05b esp=c014e030 ebp=c014ef74
 cs=0008 ds=0010 es=0010 ss=b080
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc002c0be 0xc0021aed 0xc0021c1f 0x804a768 0x80480b9 0x80480d8 0x8048237 0x804896e.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 109 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 659 reads, 252 writes
hda3 (scratch): 123 reads, 2 writes
Console: 1521 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-create FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x8048596 0x8048102 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-create:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x08048596: check_file (...ild/../../tests/lib.c:155)
0x08048102: test_main (...sts/filesys/create.inc:15)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/sm-create:

Copying tests/filesys/base/sm-create to scratch partition...
qemu -hda /tmp/user/1002/NUj1fqzQlo.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-create
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-create' into the file system...
Erasing ustar archive...
Executing 'sm-create':
(sm-create) begin
(sm-create) create "blargle"
(sm-create) open "blargle" for verification
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a852 edx=0804a852
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x8048596 0x8048102 0x8048872 0x80488a4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 242 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1602 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-full FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-full:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (.../filesys/base/full.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/sm-full:

Copying tests/filesys/base/sm-full to scratch partition...
qemu -hda /tmp/user/1002/150GlEtPUk.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-full
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-full' into the file system...
Erasing ustar archive...
Executing 'sm-full':
(sm-full) begin
(sm-full) create "quux"
(sm-full) open "quux"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a832 edx=0804a832
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 88 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 242 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1567 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a448 0x804813b 0x8048a12 0x8048a44
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-random:
0x0804a448: open (...../lib/user/syscall.c:105)
0x0804813b: test_main (...ilesys/base/random.inc:33)
0x08048a12: main (...ild/../../tests/main.c:13)
0x08048a44: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/sm-random:

Copying tests/filesys/base/sm-random to scratch partition...
qemu -hda /tmp/user/1002/5arqmV_IDo.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 113 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-random' into the file system...
Erasing ustar archive...
Executing 'sm-random':
(sm-random) begin
(sm-random) create "bazzle"
(sm-random) open "bazzle"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a9f2 edx=0804a9f2
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a448 0x804813b 0x8048a12 0x8048a44.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 89 reads, 238 writes
hda3 (scratch): 112 reads, 2 writes
Console: 1573 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-block FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-seq-block:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (...sys/base/seq-block.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/sm-seq-block:

Copying tests/filesys/base/sm-seq-block to scratch partition...
qemu -hda /tmp/user/1002/XKHxQHfw3x.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-seq-block
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-block' into the file system...
Erasing ustar archive...
Executing 'sm-seq-block':
(sm-seq-block) begin
(sm-seq-block) create "noodle"
(sm-seq-block) open "noodle"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a832 edx=0804a832
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 87 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 242 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1601 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/sm-seq-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x804876b 0x80480e6 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/sm-seq-random:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x0804876b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e6: test_main (...ys/base/seq-random.inc:22)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/sm-seq-random:

Copying tests/filesys/base/sm-seq-random to scratch partition...
qemu -hda /tmp/user/1002/xOrsdIHVgu.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run sm-seq-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'sm-seq-random' into the file system...
Erasing ustar archive...
Executing 'sm-seq-random':
(sm-seq-random) begin
(sm-seq-random) create "nibble"
(sm-seq-random) open "nibble"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a852 edx=0804a852
 esi=c010a030 edi=00000000 esp=00000010 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0010
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x804876b 0x80480e6 0x8048872 0x80488a4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 88 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 242 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1607 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-create FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x8048596 0x8048102 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-create:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x08048596: check_file (...ild/../../tests/lib.c:155)
0x08048102: test_main (...sts/filesys/create.inc:15)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/lg-create:

Copying tests/filesys/base/lg-create to scratch partition...
qemu -hda /tmp/user/1002/P_0rkTax8k.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-create
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-create' into the file system...
Erasing ustar archive...
Executing 'lg-create':
(lg-create) begin
(lg-create) create "blargle"
(lg-create) open "blargle" for verification
Page fault at 0x746361: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00746361 error=00000000
 eax=00746361 ebx=c0007d50 ecx=0804a852 edx=0804a852
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x8048596 0x8048102 0x8048872 0x80488a4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 98 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 378 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1607 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-full FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-full:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (.../filesys/base/full.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/lg-full:

Copying tests/filesys/base/lg-full to scratch partition...
qemu -hda /tmp/user/1002/nDZyyAOY4A.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-full
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-full' into the file system...
Erasing ustar archive...
Executing 'lg-full':
(lg-full) begin
(lg-full) create "quux"
(lg-full) open "quux"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a832 edx=0804a832
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 91 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 378 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1567 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a468 0x8048140 0x8048a32 0x8048a64
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-random:
0x0804a468: open (...../lib/user/syscall.c:105)
0x08048140: test_main (...ilesys/base/random.inc:33)
0x08048a32: main (...ild/../../tests/main.c:13)
0x08048a64: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/lg-random:

Copying tests/filesys/base/lg-random to scratch partition...
qemu -hda /tmp/user/1002/k1Vzg45P8U.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 113 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-random' into the file system...
Erasing ustar archive...
Executing 'lg-random':
(lg-random) begin
(lg-random) create "bazzle"
(lg-random) open "bazzle"
Page fault at 0x746361: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00746361 error=00000000
 eax=00746361 ebx=c0007d50 ecx=0804aa12 edx=0804aa12
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a468 0x8048140 0x8048a32 0x8048a64.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 99 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 89 reads, 384 writes
hda3 (scratch): 112 reads, 2 writes
Console: 1578 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-block FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-seq-block:
0x0804a288: open (...../lib/user/syscall.c:105)
0x0804874b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e4: test_main (...sys/base/seq-block.inc:20)
0x08048852: main (...ild/../../tests/main.c:13)
0x08048884: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/lg-seq-block:

Copying tests/filesys/base/lg-seq-block to scratch partition...
qemu -hda /tmp/user/1002/S_I86gntLH.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-seq-block
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-block' into the file system...
Erasing ustar archive...
Executing 'lg-seq-block':
(lg-seq-block) begin
(lg-seq-block) create "noodle"
(lg-seq-block) open "noodle"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a832 edx=0804a832
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a288 0x804874b 0x80480e4 0x8048852 0x8048884.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 94 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 378 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1601 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/lg-seq-random FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x804876b 0x80480e6 0x8048872 0x80488a4
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/lg-seq-random:
0x0804a2a8: open (...../lib/user/syscall.c:105)
0x0804876b: seq_test (...sts/filesys/seq-test.c:16)
0x080480e6: test_main (...ys/base/seq-random.inc:22)
0x08048872: main (...ild/../../tests/main.c:13)
0x080488a4: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/lg-seq-random:

Copying tests/filesys/base/lg-seq-random to scratch partition...
qemu -hda /tmp/user/1002/9if2PELHcx.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run lg-seq-random
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 111 sectors (55 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'lg-seq-random' into the file system...
Erasing ustar archive...
Executing 'lg-seq-random':
(lg-seq-random) begin
(lg-seq-random) create "nibble"
(lg-seq-random) open "nibble"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a852 edx=0804a852
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a2a8 0x804876b 0x80480e6 0x8048872 0x80488a4.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 90 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 87 reads, 378 writes
hda3 (scratch): 110 reads, 2 writes
Console: 1607 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-read FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a368 0x8048107 0x8048932 0x8048964
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/syn-read:
0x0804a368: open (...../lib/user/syscall.c:105)
0x08048107: test_main (...ilesys/base/syn-read.c:23)
0x08048932: main (...ild/../../tests/main.c:13)
0x08048964: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/syn-read:

Copying tests/filesys/base/syn-read to scratch partition...
Copying tests/filesys/base/child-syn-read to scratch partition...
qemu -hda /tmp/user/1002/TpKQGMWztb.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-read
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 233 sectors (116 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-read' into the file system...
Putting 'child-syn-read' into the file system...
Erasing ustar archive...
Executing 'syn-read':
(syn-read) begin
(syn-read) create "data"
(syn-read) open "data"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a6c4 edx=0804a6c4
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a368 0x8048107 0x8048932 0x8048964.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 95 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 116 reads, 478 writes
hda3 (scratch): 232 reads, 2 writes
Console: 1614 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-write FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a718 0x804813a 0x8048922
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0x0804a718: (unknown)
In tests/filesys/base/syn-write:
0x0804813a: test_main (...lesys/base/syn-write.c:27)
0x08048922: main (...uild/../../tests/main.c:8)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/syn-write:

Copying tests/filesys/base/syn-write to scratch partition...
Copying tests/filesys/base/child-syn-wrt to scratch partition...
qemu -hda /tmp/user/1002/MxeAHEWxoN.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-write
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 233 sectors (116 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Erasing ustar archive...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
(syn-write) exec child 3 of 10: "child-syn-wrt 2"
(syn-write) exec child 4 of 10: "child-syn-wrt 3"
(syn-write) exec child 5 of 10: "child-syn-wrt 4"
(syn-write) exec child 6 of 10: "child-syn-wrt 5"
(syn-write) exec child 7 of 10: "child-syn-wrt 6"
(syn-write) exec child 8 of 10: "child-syn-wrt 7"
(syn-write) exec child 9 of 10: "child-syn-wrt 8"
(syn-write) exec child 10 of 10: "child-syn-wrt 9"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c010aeb4 ecx=0804aa74 edx=0804aa74
 esi=c010e030 edi=00000000 esp=00000000 ebp=c010ef14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a718 0x804813a 0x8048922.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 98 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 151 reads, 486 writes
hda3 (scratch): 232 reads, 2 writes
Console: 2087 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

DETAILS OF tests/filesys/base/syn-remove FAILURE:

Kernel panic in run: PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a408 0x8048107 0x80489d2 0x8048a04
Translation of call stack:
In kernel.o:
0xc0028950: debug_panic (.../../lib/kernel/debug.c:38)
0xc002bc6c: kill (.../userprog/exception.c:105)
0xc002bd14: page_fault (.../userprog/exception.c:160)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
0xc0027b6f: strcmp (...ild/../../lib/string.c:81)
0xc002c0d0: syscall_handler (...../userprog/syscall.c:151)
0xc0021aed: intr_handler (..../threads/interrupt.c:367)
0xc0021c1f: intr_entry (threads/intr-stubs.S:38)
In tests/filesys/base/syn-remove:
0x0804a408: open (...../lib/user/syscall.c:105)
0x08048107: test_main (...esys/base/syn-remove.c:20)
0x080489d2: main (...ild/../../tests/main.c:13)
0x08048a04: _start (.../../../lib/user/entry.c:9)
Translations of user virtual addresses above are based on a guess at
the binary to use.  If this guess is incorrect, then those
translations will be misleading.

OUTPUT FROM tests/filesys/base/syn-remove:

Copying tests/filesys/base/syn-remove to scratch partition...
qemu -hda /tmp/user/1002/zlk8EAhSEh.dsk -m 4 -net none -nographic -monitor null
PiLo hda1
Loading.........
Kernel command line: -q -f extract run syn-remove
Pintos booting with 3,968 kB RAM...
367 pages available in kernel pool.
367 pages available in user pool.
Calibrating timer...  314,163,200 loops/s.
hda: 5,040 sectors (2 MB), model "QM00001", serial "QEMU HARDDISK"
hda1: 147 sectors (73 kB), Pintos OS kernel (20)
hda2: 4,096 sectors (2 MB), Pintos file system (21)
hda3: 112 sectors (56 kB), Pintos scratch (22)
filesys: using hda2
scratch: using hda3
Formatting file system...done.
Boot complete.
Extracting ustar archive from scratch device into file system...
Putting 'syn-remove' into the file system...
Erasing ustar archive...
Executing 'syn-remove':
(syn-remove) begin
(syn-remove) create "deleteme"
(syn-remove) open "deleteme"
Page fault at 0x1: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc0027b6f
 cr2=00000001 error=00000000
 eax=00000001 ebx=c000ef08 ecx=0804a9b2 edx=0804a9b2
 esi=c010a030 edi=00000000 esp=00000000 ebp=c010af14
 cs=0008 ds=0010 es=0010 ss=0000
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0xc0028950 0xc002bc6c 0xc002bd14 0xc0021aed 0xc0021c1f 0xc0027b6f 0xc002c0d0 0xc0021aed 0xc0021c1f 0x804a408 0x8048107 0x80489d2 0x8048a04.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 89 ticks
Thread: 0 idle ticks, 0 kernel ticks, 0 user ticks
hda2 (filesys): 89 reads, 235 writes
hda3 (scratch): 111 reads, 2 writes
Console: 1583 characters output
Keyboard: 0 keys pressed
Exception: 1 page faults
Powering off...
make[1]: Leaving directory '/home/team46a/pintos/src/userprog/build'
